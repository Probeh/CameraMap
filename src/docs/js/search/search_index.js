var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.717,1,1.051]],["body/components/AppComponent.html",[0,1.17,1,1.821,2,1.537,3,0.4,4,0.345,5,1.724,6,1.724,7,1.724,8,1.724,9,0.345,10,2.825,11,1.724,12,2.954,13,2.672,14,4.48,15,2.262,16,5.001,17,2.262,18,4.48,19,0.345,20,1.049,21,1.17,22,4.139,23,0.457,24,0.036,25,1.801,26,0.582,27,3.414,28,0.853,29,0.722,30,1.724,31,0.4,32,0.148,33,2.437,34,1.286,35,2.262,36,2.046,37,1.724,38,2.681,39,1.724,40,0.853,41,1.724,42,1.066,43,1.724,44,1.066,45,1.724,46,1.066,47,1.724,48,1.066,49,1.724,50,1.171,51,1.724,52,1.724,53,1.724,54,0.02,55,0.026,56,0.02]],["title/modules/AppModule.html",[57,1.547,58,1.928]],["body/modules/AppModule.html",[1,2.065,3,0.384,4,0.332,9,0.332,24,0.037,28,0.974,29,0.694,31,0.384,32,0.143,34,1.237,50,1.92,54,0.019,55,0.026,56,0.019,57,1.657,58,3.762,59,1.657,60,1.842,61,3.502,62,3.085,63,3.116,64,2.065,65,2.716,66,2.716,67,2.716,68,2.716,69,3.055,70,2.753,71,2.343,72,2.065,73,3.282,74,3.116,75,3.116,76,3.612,77,1.842,78,4.365,79,2.716,80,2.343,81,3.282,82,3.282,83,2.716,84,3.282,85,2.065,86,2.716,87,3.282,88,2.343,89,3.282,90,2.343,91,3.282,92,2.716,93,2.343,94,2.065,95,3.282,96,2.065,97,3.282,98,3.282]],["title/modules/AppRoutingModule.html",[57,1.547,99,2.188]],["body/modules/AppRoutingModule.html",[3,0.507,4,0.438,9,0.438,24,0.037,28,0.887,29,0.916,31,0.507,32,0.188,54,0.025,55,0.031,56,0.025,59,2.187,64,2.724,74,3.092,75,3.715,99,3.715,100,4.331,101,4.331,102,5.578,103,5.203,104,3.584,105,2.187,106,4.331]],["title/classes/Camera.html",[25,0.957,32,0.133]],["body/classes/Camera.html",[3,0.367,4,0.317,9,0.317,19,0.317,20,0.991,21,1.389,23,0.74,24,0.037,25,1.322,26,0.942,28,0.818,31,0.367,32,0.136,40,0.977,54,0.018,55,0.025,56,0.018,107,1.584,108,2.595,109,3.504,110,3.17,111,3.552,112,1.523,113,3.023,114,2.377,115,2.522,116,0.734,117,3.504,118,4.248,119,2.221,120,1.603,121,2.289,122,4.235,123,0.979,124,3.423,125,2.239,126,4.248,127,2.595,128,2.595,129,2.595,130,2.595,131,3.136,132,2.595,133,1.973,134,2.595,135,2.595,136,3.136,137,2.595]],["title/classes/CameraEvent.html",[32,0.133,138,1.399]],["body/classes/CameraEvent.html",[3,0.307,4,0.265,9,0.265,19,0.265,20,0.875,21,1.419,23,0.736,24,0.037,25,1.793,26,0.954,28,0.81,30,1.323,31,0.307,32,0.114,40,0.83,54,0.015,55,0.022,56,0.015,107,1.323,109,3.093,110,3.017,111,3.381,112,1.427,113,2.668,114,2.098,115,2.384,116,0.613,119,2.081,120,1.631,121,2.164,123,0.818,124,3.11,125,1.871,126,3.931,127,2.168,128,2.168,129,2.168,130,2.168,132,2.168,133,1.648,134,2.168,135,2.168,137,2.168,138,2.169,139,4.321,140,2.168,141,4.357,142,1.167,143,4.75,144,3.737,145,4.357,146,3.931,147,3.737,148,2.62,149,2.62,150,2.62,151,0.818,152,2.62,153,2.62,154,2.168,155,2.62,156,2.62,157,2.62,158,2.62,159,2.62,160,1.323]],["title/components/CameraEventsComponent.html",[0,0.717,42,0.957]],["body/components/CameraEventsComponent.html",[0,0.925,1,0.758,2,1.132,3,0.259,4,0.223,5,1.116,6,1.116,7,1.116,8,1.116,9,0.223,11,1.116,12,2.646,13,2.393,15,1.667,17,1.667,19,0.223,20,0.773,21,1.326,23,0.587,24,0.037,25,1.876,26,0.894,28,0.8,29,0.468,30,1.116,31,0.259,32,0.096,34,0.833,35,1.667,36,1.508,37,1.116,38,2.213,39,1.116,40,0.893,41,1.116,42,1.369,43,1.116,44,0.69,45,1.116,46,0.69,47,1.116,48,0.69,49,1.116,50,0.758,51,1.116,52,1.116,53,1.116,54,0.013,55,0.019,56,0.013,112,1.123,116,0.517,120,1.031,123,1.234,138,1.01,142,1.031,151,1.369,154,1.83,161,2.446,162,2.446,163,3.824,164,1.83,165,1.667,166,2.218,167,4.383,168,3.951,169,3.302,170,3.951,171,2.46,172,2.732,173,4.383,174,2.077,175,3.129,176,2.732,177,1.578,178,1.816,179,3.302,180,2.357,181,3.302,182,2.211,183,2.001,184,3.302,185,2.211,186,2.211,187,2.211,188,2.218,189,1.83,190,1.01,191,1.116,192,2.077,193,1.578,194,1.578,195,1.391,196,1.391,197,1.83,198,1.83,199,2.211,200,1.391,201,2.211,202,1.83,203,2.211,204,2.211,205,3.302,206,3.302,207,3.302,208,2.732,209,2.732,210,3.302,211,2.732]],["title/components/CameraFormComponent.html",[0,0.717,44,0.957]],["body/components/CameraFormComponent.html",[0,0.939,1,0.779,2,1.155,3,0.266,4,0.229,5,1.146,6,1.146,7,1.146,8,1.146,9,0.229,11,1.146,12,2.667,13,2.411,15,1.7,17,1.7,19,0.229,20,0.788,21,1.345,23,0.666,24,0.037,25,1.739,26,0.936,28,0.387,29,0.48,31,0.266,32,0.099,34,0.855,35,1.7,36,1.537,37,1.146,38,2.242,39,1.146,40,0.641,41,1.146,42,0.709,43,1.146,44,1.387,45,1.146,46,0.709,47,1.146,48,0.709,49,1.146,50,0.779,51,1.146,52,1.146,53,1.146,54,0.013,55,0.02,56,0.013,116,0.939,119,1.84,142,1.051,151,1.253,161,2.543,162,2.543,165,1.7,166,2.253,171,2.492,174,2.118,183,1.833,192,2.793,212,3.976,213,1.878,214,3.367,215,4.014,216,3.367,217,4.014,218,4.44,219,4.44,220,3.321,221,4.014,222,2.525,223,2.404,224,4.014,225,4.014,226,3.367,227,2.27,228,3.367,229,2.27,230,3.235,231,2.27,232,2.27,233,2.27,234,2.27,235,2.27,236,4.014,237,2.27,238,3.367,239,2.27,240,2.865,241,2.27,242,1.155,243,3.367,244,2.27,245,2.27,246,2.27,247,2.27,248,3.367,249,2.27,250,3.367,251,3.367]],["title/injectables/CameraFormService.html",[252,1.155,253,1.547]],["body/injectables/CameraFormService.html",[3,0.402,4,0.347,9,0.347,19,0.347,20,1.052,21,1.173,23,0.46,24,0.037,26,0.855,28,0.767,29,0.726,31,0.402,32,0.149,40,0.653,54,0.02,55,0.026,56,0.02,77,1.927,94,2.159,96,2.159,111,2.159,114,1.927,115,1.567,116,1.173,142,1.404,151,1.072,160,1.733,242,1.981,252,1.694,253,2.27,254,2.159,255,3.347,256,2.84,257,2.532,258,4.149,259,5.321,260,4.496,261,3.432,262,4.779,263,5.667,264,3.432,265,3.721,266,5.014,267,4.496,268,2.524,269,4.496]],["title/components/CameraListComponent.html",[0,0.717,46,0.957]],["body/components/CameraListComponent.html",[0,0.836,1,0.644,2,1,3,0.22,4,0.19,5,0.948,6,0.948,7,0.948,8,0.948,9,0.19,11,0.948,12,2.514,13,2.274,15,1.472,17,1.472,19,0.19,20,0.682,21,1.357,23,0.645,24,0.037,25,1.73,26,0.891,28,0.849,29,0.397,30,0.948,31,0.22,32,0.082,33,1.341,34,0.708,35,1.472,36,1.331,37,0.948,38,2.034,39,0.948,40,0.917,41,0.948,42,0.587,43,0.948,44,0.587,45,0.948,46,1.258,47,0.948,48,0.587,49,0.948,50,0.644,51,0.948,52,0.948,53,0.948,54,0.011,55,0.017,56,0.011,77,1.054,94,1.834,96,1.834,112,1.239,114,1.637,115,0.858,116,0.44,120,1.362,121,1.208,123,1.116,142,0.911,151,1.362,160,0.948,161,2.43,162,2.43,165,1.472,166,2.006,171,2.262,172,2.413,174,1.834,175,2.552,177,1.341,178,1.669,180,2.082,183,1.84,188,2.006,191,0.948,192,1.834,195,1.834,196,1.182,200,1.182,208,2.413,211,2.413,223,2.082,230,2.535,240,2.082,242,0.644,253,2.034,257,0.948,258,2.958,262,2.958,265,1.554,270,3.799,271,1.554,272,2.082,273,3.574,274,2.916,275,2.552,276,4.029,277,4.029,278,2.916,279,2.958,280,3.574,281,2.916,282,1.878,283,1.878,284,1.878,285,2.916,286,1.878,287,1.878,288,1.878,289,2.916,290,4.029,291,1.878,292,1.878,293,1.878,294,1.554,295,1.554,296,1.554,297,2.916,298,1.878,299,1.878,300,1.878,301,1.554,302,1.878,303,1.878,304,1.878,305,2.413,306,2.082,307,2.916,308,2.916,309,2.916,310,2.916,311,4.616,312,4.616,313,1.878]],["title/components/CameraMapComponent.html",[0,0.717,48,0.957]],["body/components/CameraMapComponent.html",[0,0.786,1,0.586,2,0.928,3,0.2,4,0.172,5,0.862,6,0.862,7,0.862,8,0.862,9,0.172,11,0.862,12,2.433,13,2.2,15,1.366,17,1.366,19,0.386,20,0.633,21,1.308,22,1.413,23,0.665,24,0.037,25,1.813,26,0.9,28,0.756,29,0.361,30,0.862,31,0.2,32,0.074,34,0.643,35,1.366,36,1.746,37,0.862,38,1.931,39,0.862,40,0.885,41,0.862,42,0.533,43,0.862,44,0.533,45,0.862,46,0.533,47,0.862,48,1.194,49,0.862,50,0.586,51,0.862,52,0.862,53,0.862,54,0.02,55,0.016,56,0.01,70,0.958,105,2.346,111,1.074,112,1.184,115,0.779,116,0.4,119,0.707,120,1.194,121,1.121,123,1.302,133,1.074,138,0.779,142,0.845,151,1.302,161,2.445,162,2.445,165,1.366,166,1.886,171,2.146,174,1.702,175,2.976,176,2.239,177,1.219,178,1.584,180,1.932,183,1.903,188,2.34,189,1.413,190,0.779,191,0.862,192,1.702,193,1.219,194,1.219,195,1.074,196,1.074,197,1.413,198,1.413,200,1.074,202,1.413,220,1.413,222,1.074,223,1.932,230,2.405,240,1.932,242,1.153,257,2.239,268,0.958,275,2.399,279,2.781,295,1.413,296,1.413,301,1.413,306,1.219,314,1.413,315,3.449,316,3.361,317,2.705,318,3.361,319,2.781,320,3.361,321,2.705,322,2.705,323,2.705,324,2.705,325,2.705,326,1.707,327,1.707,328,2.705,329,1.707,330,2.705,331,1.707,332,2.705,333,1.707,334,1.707,335,1.707,336,1.707,337,2.399,338,1.932,339,1.932,340,1.707,341,1.413,342,1.707,343,1.413,344,1.707,345,1.413,346,1.707,347,2.705,348,1.707,349,1.413,350,1.707,351,1.707,352,1.707,353,1.707,354,2.705,355,1.707,356,2.705,357,1.707,358,1.707,359,1.707,360,1.707,361,2.705,362,1.707,363,1.707,364,1.707,365,1.219,366,1.707,367,1.707,368,1.707,369,1.707,370,1.707,371,1.707,372,1.707,373,1.219,374,3.361,375,2.705,376,1.707,377,1.707,378,1.707,379,1.707,380,1.413]],["title/modules/CameraMapModule.html",[57,1.547,69,1.72]],["body/modules/CameraMapModule.html",[2,1.44,3,0.287,4,0.248,9,0.248,23,0.329,24,0.037,26,0.418,28,0.986,29,0.519,31,0.287,32,0.107,34,0.925,40,0.467,42,1.769,44,1.769,46,1.769,48,1.769,54,0.014,55,0.021,56,0.014,57,1.239,59,1.239,60,1.377,61,2.998,62,1.544,63,3.29,64,2.641,69,3.412,70,2.001,71,1.752,72,1.544,74,1.752,75,2.998,76,2.95,77,1.377,83,3.814,105,1.239,112,0.697,123,0.766,142,0.766,151,0.766,160,1.239,161,1.628,162,1.628,163,1.752,178,2.183,195,2.243,196,1.544,212,1.752,253,2.661,270,1.752,294,2.03,381,2.03,382,2.03,383,2.03,384,2.03,385,2.406,386,1.752,387,3.565,388,2.454,389,3.565,390,2.748,391,2.454,392,2.95,393,4.199,394,3.565,395,2.03,396,3.565,397,3.565,398,1.752,399,2.454,400,2.454,401,2.454,402,2.454,403,2.03,404,2.03,405,2.243,406,2.454,407,3.565,408,2.454,409,2.454,410,2.454,411,2.03]],["title/injectables/CameraMapService.html",[178,1.27,252,1.155]],["body/injectables/CameraMapService.html",[3,0.186,4,0.161,9,0.161,19,0.161,20,0.599,21,1.351,23,0.724,24,0.037,25,1.762,26,0.91,28,0.883,29,0.337,30,0.804,31,0.43,32,0.069,36,0.727,40,0.86,54,0.015,55,0.015,56,0.009,85,1.001,86,1.317,88,1.137,90,1.137,112,1.284,115,1.678,116,0.373,120,1.343,123,1.411,138,1.465,142,0.799,151,1.467,160,1.855,178,1.06,183,1.678,188,2.063,190,2.146,191,0.804,193,1.137,194,1.137,200,1.001,230,2.532,242,1.873,252,0.964,254,1.001,255,3.398,257,2.784,275,2.29,319,2.655,337,1.827,338,1.137,339,1.137,341,2.655,343,1.317,345,2.117,365,1.137,385,1.678,390,2.063,392,2.117,398,1.137,403,1.317,404,1.317,412,1.137,413,3.208,414,3.208,415,3.208,416,2.559,417,2.559,418,2.559,419,4.3,420,3.675,421,2.559,422,2.559,423,2.559,424,3.675,425,1.592,426,3.208,427,3.208,428,3.675,429,2.559,430,2.559,431,1.592,432,2.559,433,1.592,434,2.559,435,1.592,436,1.592,437,3.675,438,2.559,439,1.592,440,1.592,441,2.559,442,1.592,443,1.592,444,2.874,445,2.623,446,1.592,447,1.592,448,2.532,449,1.592,450,3.208,451,2.559,452,1.592,453,2.559,454,1.592,455,1.592,456,1.001,457,1.137,458,1.137,459,1.592,460,2.655,461,1.317,462,1.137,463,1.592,464,1.592,465,2.559,466,1.592,467,1.592,468,3.208,469,2.559,470,1.592,471,1.592,472,1.592,473,1.592,474,1.592,475,1.592,476,1.592,477,1.592,478,1.592,479,2.559,480,1.592,481,1.592,482,1.592,483,1.592,484,2.559,485,1.592,486,1.592,487,1.592,488,1.592,489,1.592,490,1.592,491,1.592,492,1.592,493,1.592,494,1.592,495,2.559,496,2.117,497,2.559,498,1.592,499,2.559,500,2.559,501,2.559,502,1.317,503,1.317]],["title/interfaces/Geolocation.html",[121,1.27,504,1.928]],["body/interfaces/Geolocation.html",[3,0.511,4,0.441,9,0.441,19,0.441,20,1.223,23,0.7,24,0.035,31,0.511,54,0.026,55,0.031,56,0.026,94,3.648,96,3.648,120,1.88,121,2.165,504,2.743,505,3.113,506,3.608]],["title/interfaces/IDictionary.html",[504,1.928,507,1.928]],["body/interfaces/IDictionary.html",[3,0.346,4,0.298,9,0.298,19,0.411,21,0.691,24,0.037,26,0.504,28,0.693,29,0.625,31,0.346,32,0.128,54,0.017,55,0.024,56,0.017,105,2.528,116,0.691,119,2.175,120,1.452,222,2.558,242,1.013,252,1.532,257,2.347,268,1.658,272,2.109,373,2.903,385,1.349,445,2.903,456,2.558,457,2.109,458,2.109,505,2.109,507,2.558,508,2.109,509,2.954,510,3.847,511,2.954,512,2.445,513,2.445,514,2.109,515,4.143,516,2.445,517,2.445,518,2.445,519,2.445,520,2.445,521,2.445,522,2.445,523,2.445,524,2.445,525,2.445,526,2.445,527,2.445,528,3.364,529,2.445,530,2.445,531,2.445,532,2.445,533,3.364,534,2.903,535,2.445,536,2.903,537,2.903,538,3.15,539,3.364,540,3.364,541,3.364,542,3.847,543,2.445,544,2.445,545,2.445,546,2.445,547,2.445,548,2.445,549,2.445,550,2.445,551,2.445,552,2.445,553,2.445,554,3.364,555,2.445,556,2.445,557,2.445]],["title/classes/KeyValue.html",[32,0.133,448,1.928]],["body/classes/KeyValue.html",[3,0.437,4,0.377,9,0.377,19,0.377,20,1.111,21,1.356,23,0.699,24,0.037,26,0.89,31,0.437,32,0.162,40,0.711,54,0.022,55,0.028,56,0.022,107,1.885,112,1.061,116,0.874,123,1.166,124,3.389,190,2.689,448,2.987,496,4.693,558,4.546,559,3.09,560,4.747,561,5.671,562,5.671,563,4.747,564,3.734,565,3.734,566,3.734]],["title/injectables/LoggerService.html",[252,1.155,385,1.399]],["body/injectables/LoggerService.html",[3,0.296,4,0.255,9,0.255,19,0.431,20,0.852,21,0.999,23,0.572,24,0.037,26,0.845,28,0.621,29,0.534,31,0.296,32,0.11,40,0.813,54,0.015,55,0.021,56,0.015,105,2.359,112,1.035,116,0.999,119,2.297,120,1.547,123,1.137,142,1.137,151,1.333,183,1.663,190,1.154,222,2.291,242,0.867,252,1.372,254,1.589,257,2.799,268,1.418,272,1.804,373,2.6,385,1.663,444,1.804,445,2.6,456,2.939,457,1.804,458,1.804,507,2.291,508,1.804,510,3.533,512,3.533,513,3.013,514,3.048,515,3.866,516,2.091,517,2.091,518,2.091,519,2.091,520,2.091,521,2.091,522,3.866,523,2.091,524,2.091,525,2.091,526,2.091,527,2.091,528,3.013,529,2.091,530,2.091,531,2.091,532,2.091,533,3.013,534,2.6,535,2.091,536,2.6,537,2.6,538,2.939,539,3.013,540,3.013,541,3.013,542,4.098,543,2.091,544,2.091,545,2.091,546,2.091,547,2.091,548,2.091,549,2.091,550,2.091,551,2.091,552,2.091,553,2.091,554,3.013,555,3.013,556,2.091,557,2.091,567,3.641,568,3.641,569,3.641,570,2.527,571,2.527,572,2.527]],["title/classes/MapOptions.html",[32,0.133,390,1.72]],["body/classes/MapOptions.html",[3,0.437,4,0.377,9,0.377,19,0.377,20,1.111,21,1.436,23,0.76,24,0.036,26,0.937,28,0.637,31,0.437,32,0.162,54,0.022,55,0.028,56,0.022,70,2.096,88,3.726,90,3.726,92,4.319,93,2.666,107,1.885,112,1.647,119,2.402,120,1.166,121,1.967,133,2.349,390,2.665,573,3.09,574,5.22,575,3.734,576,3.09,577,3.734,578,3.734,579,3.734]],["title/classes/ModelBase.html",[32,0.133,110,1.72]],["body/classes/ModelBase.html",[3,0.4,4,0.345,9,0.345,19,0.345,20,1.049,21,1.418,23,0.739,24,0.037,26,0.94,31,0.4,32,0.148,40,1.077,54,0.02,55,0.026,56,0.02,107,1.724,110,2.515,112,1.567,113,3.57,114,2.807,115,2.633,116,0.799,117,3.708,119,2.39,120,1.722,123,1.066,125,3.57,242,1.171,580,4.683,581,2.825,582,4.48,583,3.414,584,3.414,585,3.414,586,3.414,587,3.414,588,3.414]],["title/components/NavbarComponent.html",[0,0.717,50,1.051]],["body/components/NavbarComponent.html",[0,1.039,1,0.929,2,1.313,3,0.317,4,0.274,5,1.368,6,1.368,7,1.368,8,1.368,9,0.274,11,1.368,12,2.799,13,2.531,15,1.933,17,1.933,19,0.274,24,0.037,25,1.649,26,0.653,28,0.653,29,0.573,31,0.317,32,0.118,33,1.934,34,1.021,35,1.933,36,1.748,37,1.368,38,2.435,39,1.368,40,0.729,41,1.368,42,0.846,43,1.368,44,0.846,45,1.368,46,0.846,47,1.368,48,0.846,49,1.368,50,1.654,51,2.241,52,1.368,53,1.368,54,0.016,55,0.022,56,0.016,93,3.168,116,1.039,142,1.195,151,0.846,165,1.933,166,2.491,171,2.707,183,1.237,315,3.167,380,2.242,462,2.732,514,3.168,534,2.732,536,2.732,537,2.732,538,1.704,589,2.242,590,4.438,591,3.827,592,2.709,593,2.709,594,3.827,595,2.709,596,3.827,597,2.709,598,4.438,599,5.28,600,3.827,601,3.827,602,4.438,603,2.709,604,2.709,605,2.709,606,5.28,607,2.709,608,2.709,609,3.827,610,2.709,611,2.242,612,2.709,613,2.709,614,2.709,615,2.709,616,2.709,617,2.242,618,2.709,619,3.827,620,3.827,621,2.709,622,2.709,623,2.709,624,2.709,625,2.709,626,2.709,627,2.709]],["title/interceptors/ResourceInterceptor.html",[405,1.928,628,2.536]],["body/interceptors/ResourceInterceptor.html",[3,0.42,4,0.362,9,0.362,19,0.362,23,0.481,24,0.037,26,0.789,28,0.873,29,0.759,31,0.42,32,0.156,40,0.683,54,0.021,55,0.027,56,0.021,105,2.586,112,1.019,116,1.199,123,1.12,142,1.445,151,1.12,160,1.811,165,1.811,188,2.875,191,1.811,252,1.743,349,4.238,398,2.561,405,2.911,629,3.587,630,2.968,631,4.627,632,3.587,633,4.627,634,5.411,635,5.411,636,3.587,637,3.587,638,3.587,639,4.627,640,4.627,641,3.587,642,4.627,643,3.587,644,3.587,645,3.587,646,3.587,647,3.587,648,3.587,649,3.587]],["title/coverage.html",[650,3.45]],["body/coverage.html",[0,1.281,1,1.042,2,1.042,9,0.307,10,2.515,23,0.407,24,0.037,25,0.949,32,0.23,42,0.949,44,0.949,46,0.949,48,0.949,50,1.042,54,0.018,55,0.024,56,0.018,85,2.607,108,2.515,110,1.706,121,1.259,138,1.388,139,2.515,140,2.515,161,2.421,162,2.421,163,2.17,164,2.515,178,1.259,212,2.17,213,2.515,242,1.042,252,1.777,253,1.534,255,2.607,256,2.515,268,3.477,270,2.17,271,2.515,314,2.515,385,1.388,386,2.17,390,1.706,405,1.912,412,2.17,448,1.912,504,2.607,506,2.515,507,1.912,508,2.959,558,2.515,559,2.515,573,2.515,580,2.515,581,2.515,589,2.515,628,2.515,630,2.515,650,2.515,651,3.039,652,3.039,653,3.039,654,4.145,655,3.039,656,3.039,657,3.039,658,4.717,659,4.145,660,3.039,661,5.473,662,3.039,663,3.039,664,4.145,665,3.039,666,5.303,667,2.515,668,2.515,669,3.43,670,2.515,671,2.515,672,3.039,673,3.039]],["title/dependencies.html",[60,2.067,674,2.566]],["body/dependencies.html",[24,0.037,29,0.844,54,0.023,55,0.029,56,0.023,60,2.24,62,2.511,77,2.24,79,4.097,80,3.534,104,3.303,191,2.015,395,3.303,460,3.303,461,3.303,462,2.85,538,2.511,675,3.991,676,4.997,677,3.991,678,3.991,679,3.991,680,3.991,681,3.991,682,3.991,683,3.991,684,3.991,685,3.991,686,3.991,687,3.991,688,3.991,689,3.991,690,3.991,691,3.991,692,3.991,693,3.991,694,3.991]],["title/miscellaneous/enumerations.html",[695,1.296,696,3.047]],["body/miscellaneous/enumerations.html",[19,0.343,24,0.037,54,0.02,55,0.026,56,0.02,118,3.695,138,2.039,146,3.695,190,2.851,209,2.81,306,3.187,456,2.809,611,2.81,695,1.714,696,2.81,697,2.424,698,5.299,699,3.396,700,3.396,701,4.465,702,3.396,703,4.465,704,4.465,705,4.465,706,4.465,707,4.465,708,3.396,709,3.396,710,3.396,711,3.396,712,3.396,713,3.396,714,3.396,715,4.465,716,3.396,717,3.396,718,3.396,719,3.396,720,3.396,721,3.396,722,3.396,723,3.396,724,3.396,725,3.396,726,3.396,727,3.396,728,3.396,729,3.396,730,3.396,731,3.396,732,3.396,733,3.396,734,3.396,735,3.396,736,3.396,737,4.465,738,4.465,739,4.465,740,4.465]],["title/index.html",[19,0.259,741,2.566,742,2.566]],["body/index.html",[0,1.199,4,0.362,13,1.638,24,0.027,40,0.683,54,0.021,55,0.027,56,0.021,72,2.256,242,1.23,617,4.478,676,2.968,743,3.587,744,4.627,745,3.587,746,5.122,747,5.122,748,3.587,749,3.587,750,4.627,751,5.601,752,5.835,753,3.587,754,3.587,755,3.587,756,3.587,757,3.587,758,3.587,759,3.587,760,3.587,761,3.587,762,3.587,763,5.122,764,5.122,765,3.587,766,5.601,767,3.587,768,3.587,769,3.587,770,3.587,771,3.587,772,3.587,773,2.968,774,4.627,775,4.627,776,5.411,777,3.587,778,4.627,779,4.627,780,3.587,781,3.587,782,3.587,783,3.587,784,5.122,785,3.587,786,3.587,787,3.587,788,2.561,789,3.587,790,3.587,791,3.587]],["title/modules.html",[59,2.105]],["body/modules.html",[24,0.032,54,0.027,55,0.032,56,0.027,58,2.912,59,2.338,69,2.599,80,3.865,99,3.305,305,3.831,792,5.413,793,5.413,794,5.737,795,4.63]],["title/overview.html",[788,2.976]],["body/overview.html",[1,1.967,2,1.143,24,0.036,34,1.256,42,1.791,44,1.791,46,1.791,48,1.791,50,1.695,54,0.02,55,0.026,56,0.02,57,1.683,58,3.706,59,1.683,60,1.871,61,2.38,62,2.097,63,2.38,64,2.097,65,2.758,66,2.758,67,2.758,68,2.758,69,3.499,70,2.476,71,2.38,72,2.097,107,1.683,178,2.048,253,2.496,254,2.097,381,2.758,382,2.758,383,2.758,384,2.758,385,2.257,505,2.38,788,2.38,796,4.41,797,3.333,798,3.333,799,3.333]],["title/miscellaneous/typealiases.html",[695,1.296,800,3.682]],["body/miscellaneous/typealiases.html",[19,0.458,23,0.607,24,0.031,54,0.027,55,0.031,56,0.027,255,2.85,337,3.816,338,3.816,339,3.816,365,3.235,412,4.193,502,3.749,503,3.749,695,2.288,697,4.059,801,4.531]],["title/miscellaneous/variables.html",[695,1.296,802,3.047]],["body/miscellaneous/variables.html",[2,1.672,19,0.393,23,0.769,24,0.037,42,1.216,44,1.216,46,1.216,48,1.216,54,0.023,55,0.029,56,0.023,85,3.508,161,1.778,162,1.778,190,2.547,386,3.48,411,4.034,444,3.982,576,3.222,667,3.222,668,3.222,669,3.222,670,4.034,671,4.034,695,1.966,697,2.78,773,4.034,802,3.222,803,4.875,804,3.894,805,3.894,806,3.894,807,3.894,808,4.875,809,3.894,810,3.894,811,3.894]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":268,"title":{},"body":{"injectables/CameraFormService.html":{},"components/CameraMapComponent.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":535,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["0px",{"_index":604,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1",{"_index":373,"title":{},"body":{"components/CameraMapComponent.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["1).random",{"_index":483,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["1.1.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["1.11.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":624,"title":{},"body":{"components/NavbarComponent.html":{}}}],["100",{"_index":374,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["11.0.0",{"_index":676,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["17a2b8",{"_index":552,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["2",{"_index":799,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":211,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{}}}],["2.0.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":609,"title":{},"body":{"components/NavbarComponent.html":{}}}],["24",{"_index":353,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["3",{"_index":796,"title":{},"body":{"overview.html":{}}}],["3.5.1",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":605,"title":{},"body":{"components/NavbarComponent.html":{}}}],["32.083333",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["34.7999968",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["4.5.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":798,"title":{},"body":{"overview.html":{}}}],["500",{"_index":485,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["50px",{"_index":597,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5px",{"_index":627,"title":{},"body":{"components/NavbarComponent.html":{}}}],["6",{"_index":797,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["9]\\\\d*(\\\\.\\\\d",{"_index":269,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["_cameralist",{"_index":413,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["_camrefresh",{"_index":414,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["_eventslist",{"_index":415,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["a.created",{"_index":529,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["a.name?.length)[0].name?.length",{"_index":546,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["abstractcontrol",{"_index":290,"title":{},"body":{"components/CameraListComponent.html":{}}}],["accessors",{"_index":176,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{}}}],["accident",{"_index":724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action",{"_index":618,"title":{},"body":{"components/NavbarComponent.html":{}}}],["action:hover",{"_index":621,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actions",{"_index":610,"title":{},"body":{"components/NavbarComponent.html":{}}}],["active",{"_index":205,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["activity",{"_index":209,"title":{},"body":{"components/CameraEventsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["add",{"_index":307,"title":{},"body":{"components/CameraListComponent.html":{}}}],["addcamera",{"_index":416,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["addcamera(camera",{"_index":430,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["aliases",{"_index":801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alien",{"_index":720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alieninvasion",{"_index":719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":602,"title":{},"body":{"components/NavbarComponent.html":{}}}],["amount",{"_index":623,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":746,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":395,"title":{},"body":{"modules/CameraMapModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":398,"title":{},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interceptors/ResourceInterceptor.html":{}}}],["angular/compiler",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"modules/CameraMapModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":369,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["api",{"_index":462,"title":{},"body":{"injectables/CameraMapService.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["apikey",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraMapService.html":{},"classes/MapOptions.html":{}}}],["apocalypse",{"_index":729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["app/navbar/navbar.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":99,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["array",{"_index":445,"title":{},"body":{"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["array.isarray(items[0",{"_index":517,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["artifacts",{"_index":767,"title":{},"body":{"index.html":{}}}],["assets/rawdata/${req.url.split('/')[0]}.json",{"_index":641,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["async",{"_index":419,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["atob(environment.googleapi",{"_index":488,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["auto",{"_index":611,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":757,"title":{},"body":{"index.html":{}}}],["available",{"_index":305,"title":{},"body":{"components/CameraListComponent.html":{},"modules.html":{}}}],["await",{"_index":465,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["awesome",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":544,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["b.created",{"_index":527,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["b.name?.length",{"_index":545,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["background",{"_index":534,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["base.model",{"_index":135,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["base.model.ts",{"_index":581,"title":{},"body":{"classes/ModelBase.html":{},"coverage.html":{}}}],["base.model.ts:3",{"_index":584,"title":{},"body":{"classes/ModelBase.html":{}}}],["base.model.ts:4",{"_index":585,"title":{},"body":{"classes/ModelBase.html":{}}}],["base.model.ts:5",{"_index":583,"title":{},"body":{"classes/ModelBase.html":{}}}],["base.model.ts:6",{"_index":582,"title":{},"body":{"classes/ModelBase.html":{}}}],["behaviorsubject",{"_index":450,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["behaviorsubject(this._cameralist?.slice",{"_index":451,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["behaviorsubject(this._eventslist.value?.slice",{"_index":453,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["between",{"_index":615,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bolder",{"_index":541,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["boolean",{"_index":228,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brand",{"_index":607,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":794,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":625,"title":{},"body":{"components/NavbarComponent.html":{}}}],["build",{"_index":766,"title":{},"body":{"index.html":{}}}],["cam.coordinates",{"_index":473,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["cam.id",{"_index":472,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["camera",{"_index":25,"title":{"classes/Camera.html":{}},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["camera(cam.name",{"_index":471,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["camera.id",{"_index":156,"title":{},"body":{"classes/CameraEvent.html":{}}}],["camera.name",{"_index":208,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{}}}],["camera.svg.png",{"_index":359,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["camera.svg/${iconsize}px",{"_index":357,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["cameraevent",{"_index":138,"title":{"classes/CameraEvent.html":{}},"body":{"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cameraevent(this._eventslist?.key",{"_index":481,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["cameraevents",{"_index":170,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["cameraeventscomponent",{"_index":42,"title":{"components/CameraEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cameraform",{"_index":258,"title":{},"body":{"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{}}}],["cameraformcomponent",{"_index":44,"title":{"components/CameraFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cameraformservice",{"_index":253,"title":{"injectables/CameraFormService.html":{}},"body":{"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{},"overview.html":{}}}],["cameraicon",{"_index":354,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["cameraid",{"_index":141,"title":{},"body":{"classes/CameraEvent.html":{}}}],["cameralist",{"_index":275,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["cameralistcomponent",{"_index":46,"title":{"components/CameraListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cameramap",{"_index":743,"title":{},"body":{"index.html":{}}}],["cameramap/camera",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{}}}],["cameramapcomponent",{"_index":48,"title":{"components/CameraMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cameramapmodule",{"_index":69,"title":{"modules/CameraMapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"modules.html":{},"overview.html":{}}}],["cameramapmodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["cameramapservice",{"_index":178,"title":{"injectables/CameraMapService.html":{}},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"coverage.html":{},"overview.html":{}}}],["cameras",{"_index":306,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cameras[index",{"_index":351,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["cameraselect",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cameratype",{"_index":118,"title":{},"body":{"classes/Camera.html":{},"miscellaneous/enumerations.html":{}}}],["cancel",{"_index":251,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["cancelform",{"_index":218,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["car",{"_index":723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["caraccident",{"_index":722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"classes/MapOptions.html":{},"components/NavbarComponent.html":{}}}],["change",{"_index":759,"title":{},"body":{"index.html":{}}}],["check",{"_index":787,"title":{},"body":{"index.html":{}}}],["circle",{"_index":358,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["civil",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["civilprotest",{"_index":709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":32,"title":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/KeyValue.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/KeyValue.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"overview.html":{}}}],["cli",{"_index":747,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cameramapmodule",{"_index":381,"title":{},"body":{"modules/CameraMapModule.html":{},"overview.html":{}}}],["cluster_cameramapmodule_declarations",{"_index":384,"title":{},"body":{"modules/CameraMapModule.html":{},"overview.html":{}}}],["cluster_cameramapmodule_exports",{"_index":382,"title":{},"body":{"modules/CameraMapModule.html":{},"overview.html":{}}}],["cluster_cameramapmodule_providers",{"_index":383,"title":{},"body":{"modules/CameraMapModule.html":{},"overview.html":{}}}],["code",{"_index":761,"title":{},"body":{"index.html":{}}}],["color",{"_index":536,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["command",{"_index":789,"title":{},"body":{"index.html":{}}}],["common/enums/camera",{"_index":131,"title":{},"body":{"classes/Camera.html":{}}}],["common/enums/event",{"_index":152,"title":{},"body":{"classes/CameraEvent.html":{}}}],["common/enums/logger",{"_index":457,"title":{},"body":{"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["common/helpers/key",{"_index":459,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["common/helpers/map.config",{"_index":403,"title":{},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{}}}],["common/models/camera",{"_index":193,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["common/models/camera.model",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["common/models/geolocation.model",{"_index":133,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraMapComponent.html":{},"classes/MapOptions.html":{}}}],["common/models/model",{"_index":134,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["common/services/camera",{"_index":195,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{}}}],["common/services/logger.service",{"_index":404,"title":{},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{}}}],["common/services/resource.interceptor",{"_index":406,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["commonmodule",{"_index":394,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/MapOptions.html":{}}}],["confirm('are",{"_index":245,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["console.clear",{"_index":523,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c\\t",{"_index":549,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["console.groupcollapsed(`%c\\t\\t",{"_index":530,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["console.groupend",{"_index":554,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["console.table(item",{"_index":553,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["const",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"interceptors/ResourceInterceptor.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["constructor(camera",{"_index":144,"title":{},"body":{"classes/CameraEvent.html":{}}}],["constructor(key",{"_index":560,"title":{},"body":{"classes/KeyValue.html":{}}}],["constructor(mapservice",{"_index":177,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["constructor(name",{"_index":117,"title":{},"body":{"classes/Camera.html":{},"classes/ModelBase.html":{}}}],["constructor(options",{"_index":425,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["content",{"_index":613,"title":{},"body":{"components/NavbarComponent.html":{}}}],["context",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":292,"title":{},"body":{"components/CameraListComponent.html":{}}}],["control.invalid",{"_index":304,"title":{},"body":{"components/CameraListComponent.html":{}}}],["control.touched",{"_index":303,"title":{},"body":{"components/CameraListComponent.html":{}}}],["coordinates",{"_index":111,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"injectables/CameraFormService.html":{},"components/CameraMapComponent.html":{}}}],["coordinates.lng",{"_index":363,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["coverage",{"_index":650,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":113,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/ModelBase.html":{}}}],["createform",{"_index":259,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["current",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CameraMapComponent.html":{}}}],["currentcam",{"_index":318,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["dataset",{"_index":640,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["date",{"_index":125,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/ModelBase.html":{}}}],["date)?.valueof",{"_index":528,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["declarations",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"overview.html":{}}}],["decorators",{"_index":237,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["default",{"_index":444,"title":{},"body":{"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":114,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"classes/ModelBase.html":{}}}],["details",{"_index":310,"title":{},"body":{"components/CameraListComponent.html":{}}}],["dev",{"_index":754,"title":{},"body":{"index.html":{}}}],["development",{"_index":749,"title":{},"body":{"index.html":{}}}],["difference",{"_index":556,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["direction",{"_index":600,"title":{},"body":{"components/NavbarComponent.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["directives",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":765,"title":{},"body":{"index.html":{}}}],["directory",{"_index":770,"title":{},"body":{"index.html":{}}}],["display",{"_index":598,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dist",{"_index":769,"title":{},"body":{"index.html":{}}}],["docs",{"_index":594,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(\"map",{"_index":342,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["documentation",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["dynamic",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":781,"title":{},"body":{"index.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"components/NavbarComponent.html":{}}}],["element.coordinates",{"_index":360,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["element.id",{"_index":367,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["element.name",{"_index":368,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["elementref",{"_index":236,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["elements",{"_index":525,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["elements.foreach(item",{"_index":547,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["elements.length",{"_index":531,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["elements.slice().sort((a",{"_index":543,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["emitter",{"_index":477,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["emitter.next(this._eventslist.value.slice",{"_index":484,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["end",{"_index":617,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["enumerations",{"_index":696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment.prod",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraMapService.html":{}}}],["environment",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraMapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googleapi",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["eruption",{"_index":732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":145,"title":{},"body":{"classes/CameraEvent.html":{}}}],["event.id",{"_index":210,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["event.model",{"_index":194,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["event.model.ts",{"_index":140,"title":{},"body":{"classes/CameraEvent.html":{},"coverage.html":{}}}],["event.model.ts:10",{"_index":147,"title":{},"body":{"classes/CameraEvent.html":{}}}],["event.model.ts:20",{"_index":150,"title":{},"body":{"classes/CameraEvent.html":{}}}],["event.model.ts:8",{"_index":149,"title":{},"body":{"classes/CameraEvent.html":{}}}],["event.model.ts:9",{"_index":148,"title":{},"body":{"classes/CameraEvent.html":{}}}],["event.name",{"_index":207,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["eventemitter",{"_index":230,"title":{},"body":{"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["events",{"_index":167,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["events.component",{"_index":399,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["events.component.html",{"_index":169,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.scss",{"_index":168,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts",{"_index":164,"title":{},"body":{"components/CameraEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:14",{"_index":181,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts:16",{"_index":187,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts:17",{"_index":179,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts:20",{"_index":182,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts:22",{"_index":186,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events.component.ts:25",{"_index":185,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["events/camera",{"_index":163,"title":{},"body":{"components/CameraEventsComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{}}}],["eventslist",{"_index":319,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["eventtype",{"_index":146,"title":{},"body":{"classes/CameraEvent.html":{},"miscellaneous/enumerations.html":{}}}],["exceptions",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execute",{"_index":778,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["exports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CameraMapModule.html":{},"overview.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["extinction",{"_index":735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fallout",{"_index":714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":311,"title":{},"body":{"components/CameraListComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{}}}],["files",{"_index":760,"title":{},"body":{"index.html":{}}}],["find(x",{"_index":500,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["flag",{"_index":772,"title":{},"body":{"index.html":{}}}],["flex",{"_index":599,"title":{},"body":{"components/NavbarComponent.html":{}}}],["font",{"_index":538,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["form",{"_index":214,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["form.component",{"_index":400,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["form.component.html",{"_index":216,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.scss",{"_index":215,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts",{"_index":213,"title":{},"body":{"components/CameraFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:11",{"_index":232,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:12",{"_index":231,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:14",{"_index":229,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:15",{"_index":227,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:16",{"_index":226,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:19",{"_index":234,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:21",{"_index":235,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:25",{"_index":233,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.component.ts:9",{"_index":239,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["form.service",{"_index":294,"title":{},"body":{"components/CameraListComponent.html":{},"modules/CameraMapModule.html":{}}}],["form.service.ts",{"_index":256,"title":{},"body":{"injectables/CameraFormService.html":{},"coverage.html":{}}}],["form.service.ts:11",{"_index":261,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["form.service.ts:7",{"_index":260,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["form/camera",{"_index":212,"title":{},"body":{"components/CameraFormComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{}}}],["formcontrol",{"_index":263,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["formgroup",{"_index":262,"title":{},"body":{"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{}}}],["formservice",{"_index":280,"title":{},"body":{"components/CameraListComponent.html":{}}}],["forroot",{"_index":388,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["forroot(options",{"_index":389,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["fsevents",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["further",{"_index":783,"title":{},"body":{"index.html":{}}}],["generate",{"_index":763,"title":{},"body":{"index.html":{}}}],["generated",{"_index":745,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":121,"title":{"interfaces/Geolocation.html":{}},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"interfaces/Geolocation.html":{},"classes/MapOptions.html":{},"coverage.html":{}}}],["get('cameras",{"_index":467,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getcamerabyid",{"_index":417,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getcamerabyid(id",{"_index":432,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getcameraevents",{"_index":418,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getcameraevents(camera",{"_index":434,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getcameras",{"_index":420,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["geteventbyid",{"_index":421,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["geteventbyid(id",{"_index":438,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["getting",{"_index":741,"title":{"index.html":{}},"body":{}}],["go",{"_index":786,"title":{},"body":{"index.html":{}}}],["google.maps.animation.drop",{"_index":370,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["google.maps.latlng",{"_index":503,"title":{},"body":{"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["google.maps.latlng(coordinates.lat",{"_index":362,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["google.maps.map",{"_index":502,"title":{},"body":{"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["google.maps.map(element",{"_index":491,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["google.maps.marker",{"_index":365,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["googleapi",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemap",{"_index":337,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["googlemaps",{"_index":320,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["googlemaps/js",{"_index":461,"title":{},"body":{"injectables/CameraMapService.html":{},"dependencies.html":{}}}],["grand",{"_index":717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grandtheftauto",{"_index":716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":795,"title":{},"body":{"modules.html":{}}}],["group",{"_index":510,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["guid",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":380,"title":{},"body":{"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["help",{"_index":784,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["htmlelement",{"_index":341,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["http",{"_index":427,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["http://localhost:4200",{"_index":756,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":396,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["httpclient",{"_index":428,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["httpclientmodule",{"_index":397,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["httpevent",{"_index":638,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["httphandler",{"_index":635,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["httpinterceptor",{"_index":639,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["httprequest",{"_index":634,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/circle",{"_index":355,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["i+1",{"_index":308,"title":{},"body":{"components/CameraListComponent.html":{}}}],["icon",{"_index":220,"title":{},"body":{"components/CameraFormComponent.html":{},"components/CameraMapComponent.html":{}}}],["icons",{"_index":356,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["iconsize",{"_index":352,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["id",{"_index":115,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"classes/ModelBase.html":{}}}],["identifier",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["idictionary",{"_index":507,"title":{"interfaces/IDictionary.html":{}},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["il",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":165,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CameraMapModule.html":{}}}],["indentation",{"_index":567,"title":{},"body":{"injectables/LoggerService.html":{}}}],["indentation(name",{"_index":555,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":509,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["inherited",{"_index":126,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["injectable",{"_index":252,"title":{"injectables/CameraFormService.html":{},"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{}},"body":{"injectables/CameraFormService.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":254,"title":{},"body":{"injectables/CameraFormService.html":{},"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["input",{"_index":192,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["inputs",{"_index":174,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["intercept",{"_index":631,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["intercept(req",{"_index":633,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["interceptor",{"_index":628,"title":{"interceptors/ResourceInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":629,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["interface",{"_index":504,"title":{"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{}},"body":{"interfaces/Geolocation.html":{},"coverage.html":{}}}],["interfaces",{"_index":505,"title":{},"body":{"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"overview.html":{}}}],["invasion",{"_index":721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isvalid",{"_index":221,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["item",{"_index":550,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["item.id",{"_index":551,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["items",{"_index":514,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["items.foreach(item",{"_index":519,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["items?.length",{"_index":516,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["items[0",{"_index":518,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["jquery",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":648,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["jsonurl",{"_index":642,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["jupiter",{"_index":707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":612,"title":{},"body":{"components/NavbarComponent.html":{}}}],["karma",{"_index":780,"title":{},"body":{"index.html":{}}}],["key",{"_index":496,"title":{},"body":{"injectables/CameraMapService.html":{},"classes/KeyValue.html":{}}}],["keyvalue",{"_index":448,"title":{"classes/KeyValue.html":{}},"body":{"injectables/CameraMapService.html":{},"classes/KeyValue.html":{},"coverage.html":{}}}],["language",{"_index":574,"title":{},"body":{"classes/MapOptions.html":{}}}],["lat",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"interfaces/Geolocation.html":{}}}],["left",{"_index":620,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["lifecycle",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":622,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":272,"title":{},"body":{"components/CameraListComponent.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["list'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["list.component",{"_index":401,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["list.component.html",{"_index":274,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.scss",{"_index":273,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts",{"_index":271,"title":{},"body":{"components/CameraListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":282,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:16",{"_index":283,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:18",{"_index":293,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:19",{"_index":281,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:22",{"_index":284,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:27",{"_index":288,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:31",{"_index":287,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:34",{"_index":286,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list.component.ts:38",{"_index":291,"title":{},"body":{"components/CameraListComponent.html":{}}}],["list/camera",{"_index":270,"title":{},"body":{"components/CameraListComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{}}}],["literal",{"_index":576,"title":{},"body":{"classes/MapOptions.html":{},"miscellaneous/variables.html":{}}}],["lng",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"interfaces/Geolocation.html":{}}}],["load",{"_index":490,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["loader",{"_index":460,"title":{},"body":{"injectables/CameraMapService.html":{},"dependencies.html":{}}}],["loadmap",{"_index":422,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["loadmap(element",{"_index":345,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["log",{"_index":568,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(group",{"_index":513,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["logger",{"_index":426,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["loggerscope",{"_index":456,"title":{},"body":{"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loggerservice",{"_index":385,"title":{"injectables/LoggerService.html":{}},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["logs",{"_index":512,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["map",{"_index":315,"title":{},"body":{"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["map'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["map.component",{"_index":402,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["map.component.html",{"_index":317,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.scss",{"_index":316,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts",{"_index":314,"title":{},"body":{"components/CameraMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:15",{"_index":325,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:16",{"_index":326,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:18",{"_index":334,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:19",{"_index":336,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:21",{"_index":335,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:22",{"_index":324,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:25",{"_index":327,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:37",{"_index":333,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:60",{"_index":329,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.component.ts:64",{"_index":331,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["map.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["map.module.ts",{"_index":386,"title":{},"body":{"modules/CameraMapModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map.module.ts:24",{"_index":391,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["map.service",{"_index":196,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{}}}],["map.service.ts",{"_index":412,"title":{},"body":{"injectables/CameraMapService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["map.service.ts:17",{"_index":447,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:18",{"_index":446,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:19",{"_index":449,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:21",{"_index":452,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:22",{"_index":429,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:30",{"_index":436,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:38",{"_index":443,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:51",{"_index":440,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:56",{"_index":431,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:60",{"_index":435,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:66",{"_index":442,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:70",{"_index":439,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map.service.ts:75",{"_index":433,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["map/camera",{"_index":162,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maplatlng",{"_index":338,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["mapmarker",{"_index":339,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"miscellaneous/typealiases.html":{}}}],["mapoptions",{"_index":390,"title":{"classes/MapOptions.html":{}},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"classes/MapOptions.html":{},"coverage.html":{}}}],["mapposition",{"_index":361,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["mapservice",{"_index":180,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["margin",{"_index":619,"title":{},"body":{"components/NavbarComponent.html":{}}}],["marker",{"_index":364,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["marker.addlistener('click",{"_index":371,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["marker.setanimation(google.maps.animation.bounce",{"_index":372,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["mass",{"_index":734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massextinction",{"_index":733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlngth",{"_index":542,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["mercury",{"_index":706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["methods",{"_index":142,"title":{},"body":{"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["miscellaneous",{"_index":695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":217,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["modelbase",{"_index":110,"title":{"classes/ModelBase.html":{}},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["modelbase:3",{"_index":129,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["modelbase:4",{"_index":130,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["modelbase:5",{"_index":127,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["modelbase:6",{"_index":128,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CameraMapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"overview.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CameraMapModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":393,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["more",{"_index":785,"title":{},"body":{"index.html":{}}}],["multi",{"_index":410,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"index.html":{}}}],["name.length",{"_index":557,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["nav",{"_index":606,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":591,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":590,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":50,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":755,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":595,"title":{},"body":{"components/NavbarComponent.html":{}}}],["neptune",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":242,"title":{},"body":{"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":349,"title":{},"body":{"components/CameraMapComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["next.handle(request",{"_index":649,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["ng",{"_index":752,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CameraMapModule.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["nuclear",{"_index":713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nuclearfallout",{"_index":712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number",{"_index":120,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{}}}],["object",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.logs).foreach((group",{"_index":524,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["object.values(eventtype).length",{"_index":159,"title":{},"body":{"classes/CameraEvent.html":{}}}],["object.values(eventtype)[math.floor(math.random",{"_index":158,"title":{},"body":{"classes/CameraEvent.html":{}}}],["observable",{"_index":188,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interceptors/ResourceInterceptor.html":{}}}],["oncameraselection",{"_index":321,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["oncameraselection(id",{"_index":328,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["oncancel",{"_index":224,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["oninit",{"_index":166,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["onselection",{"_index":172,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{}}}],["onselection(camera",{"_index":184,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["onselection(id",{"_index":285,"title":{},"body":{"components/CameraListComponent.html":{}}}],["onselectioninput",{"_index":322,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["onselectioninput(camera",{"_index":330,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["onsubmit",{"_index":225,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["optional",{"_index":112,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"interceptors/ResourceInterceptor.html":{}}}],["options",{"_index":392,"title":{},"body":{"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{}}}],["out",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":240,"title":{},"body":{"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["outputs",{"_index":223,"title":{},"body":{"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["overview",{"_index":788,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":674,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":603,"title":{},"body":{"components/NavbarComponent.html":{}}}],["page",{"_index":791,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":123,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/ModelBase.html":{},"interceptors/ResourceInterceptor.html":{}}}],["pipe(tap(result",{"_index":468,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["position",{"_index":366,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["print",{"_index":522,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["private",{"_index":257,"title":{},"body":{"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["prod",{"_index":771,"title":{},"body":{"index.html":{}}}],["production",{"_index":773,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":744,"title":{},"body":{"index.html":{}}}],["promise",{"_index":437,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{}}}],["protest",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["protractor",{"_index":782,"title":{},"body":{"index.html":{}}}],["provide",{"_index":407,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{}}}],["qul6yvn5qlncognrotzqy0dasmhtrm9itvjocuhdeguwthlvzjrn",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":143,"title":{},"body":{"classes/CameraEvent.html":{}}}],["reactiveformsmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{}}}],["reference",{"_index":790,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":206,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["refreshevents",{"_index":423,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["refreshevents(camera",{"_index":441,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["refreshlist",{"_index":173,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["region",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/CameraMapService.html":{},"classes/MapOptions.html":{}}}],["reload",{"_index":758,"title":{},"body":{"index.html":{}}}],["req",{"_index":637,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["req.clone",{"_index":645,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["req.url.replace(req.url.split('/')[0",{"_index":643,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["request",{"_index":644,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["require",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":312,"title":{},"body":{"components/CameraListComponent.html":{}}}],["reset",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CameraMapModule.html":{},"overview.html":{}}}],["resetcamera",{"_index":276,"title":{},"body":{"components/CameraListComponent.html":{}}}],["resourceinterceptor",{"_index":405,"title":{"interceptors/ResourceInterceptor.html":{}},"body":{"modules/CameraMapModule.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{}}}],["responsetype",{"_index":647,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["result",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.map(cam",{"_index":470,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["results",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":160,"title":{},"body":{"classes/CameraEvent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interceptors/ResourceInterceptor.html":{}}}],["returns",{"_index":151,"title":{},"body":{"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":601,"title":{},"body":{"components/NavbarComponent.html":{}}}],["run",{"_index":751,"title":{},"body":{"index.html":{}}}],["running",{"_index":774,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":191,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"interceptors/ResourceInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":455,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["saturn",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["save",{"_index":250,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["saveform",{"_index":219,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["scaffolding",{"_index":762,"title":{},"body":{"index.html":{}}}],["scope.enum",{"_index":458,"title":{},"body":{"injectables/CameraMapService.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["scope.enum.ts",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["selection",{"_index":175,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["selection(value",{"_index":198,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{}}}],["selectionchange",{"_index":279,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["serve",{"_index":753,"title":{},"body":{"index.html":{}}}],["server",{"_index":750,"title":{},"body":{"index.html":{}}}],["set",{"_index":197,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{}}}],["seteventlistener",{"_index":424,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["setinterval",{"_index":478,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["setselection(value",{"_index":189,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{}}}],["showcameras",{"_index":323,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["showcameras(cameras",{"_index":332,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["size",{"_index":608,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size:14px",{"_index":539,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["slice",{"_index":499,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"interfaces/IDictionary.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"components/NavbarComponent.html":{},"interceptors/ResourceInterceptor.html":{},"index.html":{}}}],["space",{"_index":614,"title":{},"body":{"components/NavbarComponent.html":{}}}],["spec\\.ts",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../camera",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/@common/enums/camera",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/event",{"_index":708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/enums/logger",{"_index":736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/@common/helpers/key",{"_index":558,"title":{},"body":{"classes/KeyValue.html":{},"coverage.html":{}}}],["src/app/@common/helpers/map.config.ts",{"_index":573,"title":{},"body":{"classes/MapOptions.html":{},"coverage.html":{}}}],["src/app/@common/helpers/map.config.ts:4",{"_index":575,"title":{},"body":{"classes/MapOptions.html":{}}}],["src/app/@common/helpers/map.config.ts:5",{"_index":578,"title":{},"body":{"classes/MapOptions.html":{}}}],["src/app/@common/helpers/map.config.ts:6",{"_index":579,"title":{},"body":{"classes/MapOptions.html":{}}}],["src/app/@common/helpers/map.config.ts:7",{"_index":577,"title":{},"body":{"classes/MapOptions.html":{}}}],["src/app/@common/models/camera",{"_index":139,"title":{},"body":{"classes/CameraEvent.html":{},"coverage.html":{}}}],["src/app/@common/models/camera.model.ts",{"_index":108,"title":{},"body":{"classes/Camera.html":{},"coverage.html":{}}}],["src/app/@common/models/camera.model.ts:8",{"_index":122,"title":{},"body":{"classes/Camera.html":{}}}],["src/app/@common/models/geolocation.model.ts",{"_index":506,"title":{},"body":{"interfaces/Geolocation.html":{},"coverage.html":{}}}],["src/app/@common/models/model",{"_index":580,"title":{},"body":{"classes/ModelBase.html":{},"coverage.html":{}}}],["src/app/@common/services/camera",{"_index":255,"title":{},"body":{"injectables/CameraFormService.html":{},"injectables/CameraMapService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/@common/services/logger.service.ts",{"_index":508,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/@common/services/logger.service.ts:12",{"_index":571,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:22",{"_index":572,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:38",{"_index":570,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/logger.service.ts:53",{"_index":511,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["src/app/@common/services/logger.service.ts:7",{"_index":569,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/@common/services/resource.interceptor.ts",{"_index":630,"title":{},"body":{"interceptors/ResourceInterceptor.html":{},"coverage.html":{}}}],["src/app/@common/services/resource.interceptor.ts:11",{"_index":636,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["src/app/@common/services/resource.interceptor.ts:6",{"_index":632,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["src/app/app",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/camera",{"_index":161,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":589,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:12",{"_index":593,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:8",{"_index":592,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":616,"title":{},"body":{"components/NavbarComponent.html":{}}}],["started",{"_index":742,"title":{"index.html":{}},"body":{}}],["statements",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":387,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["stored",{"_index":768,"title":{},"body":{"index.html":{}}}],["string",{"_index":119,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraFormComponent.html":{},"components/CameraMapComponent.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["styles.scss",{"_index":313,"title":{},"body":{"components/CameraListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["submitcamera",{"_index":277,"title":{},"body":{"components/CameraListComponent.html":{}}}],["subscribe",{"_index":487,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["super(event",{"_index":153,"title":{},"body":{"classes/CameraEvent.html":{}}}],["super(name",{"_index":136,"title":{},"body":{"classes/Camera.html":{}}}],["super.name",{"_index":157,"title":{},"body":{"classes/CameraEvent.html":{}}}],["supernova",{"_index":715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supervolcanic",{"_index":731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supervolcano",{"_index":730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":792,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":246,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["suspicious",{"_index":726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["suspiciousactivity",{"_index":725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":793,"title":{},"body":{"modules.html":{}}}],["t\\t",{"_index":533,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["t_key",{"_index":561,"title":{},"body":{"classes/KeyValue.html":{}}}],["t_value",{"_index":562,"title":{},"body":{"classes/KeyValue.html":{}}}],["table",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":454,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["test",{"_index":777,"title":{},"body":{"index.html":{}}}],["tests",{"_index":776,"title":{},"body":{"index.html":{}}}],["text",{"_index":626,"title":{},"body":{"components/NavbarComponent.html":{}}}],["theft",{"_index":718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["theme",{"_index":596,"title":{},"body":{"components/NavbarComponent.html":{}}}],["themes.scss",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CameraListComponent.html":{},"components/NavbarComponent.html":{}}}],["then((result",{"_index":346,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this._cameralist",{"_index":469,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._cameralist.push(camera",{"_index":493,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._camrefresh",{"_index":486,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._camrefresh.next",{"_index":497,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._eventslist",{"_index":495,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._eventslist.value",{"_index":498,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._eventslist?.key",{"_index":479,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._eventslist?.value.length",{"_index":482,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this._eventslist?.value?.push(new",{"_index":480,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.camera",{"_index":154,"title":{},"body":{"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{}}}],["this.cameraevents",{"_index":201,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["this.cameraform",{"_index":265,"title":{},"body":{"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{}}}],["this.cameraid",{"_index":155,"title":{},"body":{"classes/CameraEvent.html":{}}}],["this.cameralist",{"_index":295,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["this.cameralist$.next(result",{"_index":474,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.cameralist$.next(this._cameralist.slice",{"_index":494,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.cameralist$.subscribe",{"_index":348,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.coordinates",{"_index":137,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["this.created",{"_index":588,"title":{},"body":{"classes/ModelBase.html":{}}}],["this.currentcam",{"_index":375,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.eventslist",{"_index":343,"title":{},"body":{"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{}}}],["this.formservice.createform",{"_index":299,"title":{},"body":{"components/CameraListComponent.html":{}}}],["this.getcameras",{"_index":463,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.googlemaps",{"_index":347,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.http",{"_index":466,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.id",{"_index":587,"title":{},"body":{"classes/ModelBase.html":{}}}],["this.indentation(item.name",{"_index":548,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["this.key",{"_index":565,"title":{},"body":{"classes/KeyValue.html":{}}}],["this.logger.log(loggerscope.cameras",{"_index":475,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.logs[group",{"_index":515,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["this.logs[group].sort((a,b",{"_index":526,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["this.logs[group].unshift(item",{"_index":520,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["this.mapservice",{"_index":344,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.mapservice.addcamera(this.cameraform.value",{"_index":298,"title":{},"body":{"components/CameraListComponent.html":{}}}],["this.mapservice.cameralist",{"_index":296,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["this.mapservice.eventslist",{"_index":202,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{}}}],["this.mapservice.getcamerabyid(id",{"_index":301,"title":{},"body":{"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{}}}],["this.mapservice.getcameraevents(camera",{"_index":204,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["this.mapservice.refreshevents(this.camera",{"_index":203,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["this.modal.nativeelement.click",{"_index":243,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["this.name",{"_index":586,"title":{},"body":{"classes/ModelBase.html":{}}}],["this.oncancel.next",{"_index":247,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["this.onselection(value",{"_index":199,"title":{},"body":{"components/CameraEventsComponent.html":{}}}],["this.onselectioninput(value",{"_index":340,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.onsubmit.next",{"_index":244,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["this.options.config",{"_index":492,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.options.region",{"_index":489,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.print",{"_index":521,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["this.resetcamera",{"_index":297,"title":{},"body":{"components/CameraListComponent.html":{}}}],["this.selection",{"_index":300,"title":{},"body":{"components/CameraListComponent.html":{}}}],["this.selectionchange.emit(this.currentcam",{"_index":376,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":302,"title":{},"body":{"components/CameraListComponent.html":{}}}],["this.seteventlistener",{"_index":464,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["this.showcameras(result",{"_index":350,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["this.title",{"_index":248,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["this.value",{"_index":566,"title":{},"body":{"classes/KeyValue.html":{}}}],["times",{"_index":249,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["title",{"_index":222,"title":{},"body":{"components/CameraFormComponent.html":{},"components/CameraMapComponent.html":{},"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["titlecase",{"_index":309,"title":{},"body":{"components/CameraListComponent.html":{}}}],["todo",{"_index":377,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["topromise",{"_index":476,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["total",{"_index":532,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["true",{"_index":411,"title":{},"body":{"modules/CameraMapModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/Camera.html":{},"classes/CameraEvent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"injectables/CameraFormService.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"injectables/CameraMapService.html":{},"interfaces/Geolocation.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"classes/MapOptions.html":{},"classes/ModelBase.html":{},"interceptors/ResourceInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":132,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{}}}],["type.enum.ts",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":775,"title":{},"body":{"index.html":{}}}],["update",{"_index":378,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["url",{"_index":646,"title":{},"body":{"interceptors/ResourceInterceptor.html":{}}}],["use",{"_index":764,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":409,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["usevalue",{"_index":408,"title":{},"body":{"modules/CameraMapModule.html":{}}}],["validators",{"_index":264,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["validators.pattern",{"_index":267,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["validators.required",{"_index":266,"title":{},"body":{"injectables/CameraFormService.html":{}}}],["validinput",{"_index":278,"title":{},"body":{"components/CameraListComponent.html":{}}}],["validinput(control",{"_index":289,"title":{},"body":{"components/CameraListComponent.html":{}}}],["value",{"_index":190,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"classes/KeyValue.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.ts",{"_index":559,"title":{},"body":{"classes/KeyValue.html":{},"coverage.html":{}}}],["value.ts:3",{"_index":564,"title":{},"body":{"classes/KeyValue.html":{}}}],["value.ts:4",{"_index":563,"title":{},"body":{"classes/KeyValue.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"components/NavbarComponent.html":{}}}],["variable",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":802,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venus",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":748,"title":{},"body":{"index.html":{}}}],["via",{"_index":779,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":241,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["viewchild('modalref",{"_index":238,"title":{},"body":{"components/CameraFormComponent.html":{}}}],["void",{"_index":183,"title":{},"body":{"components/CameraEventsComponent.html":{},"components/CameraFormComponent.html":{},"components/CameraListComponent.html":{},"components/CameraMapComponent.html":{},"injectables/CameraMapService.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["weight",{"_index":540,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{}}}],["white",{"_index":537,"title":{},"body":{"interfaces/IDictionary.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["width",{"_index":379,"title":{},"body":{"components/CameraMapComponent.html":{}}}],["x.id",{"_index":501,"title":{},"body":{"injectables/CameraMapService.html":{}}}],["yes",{"_index":124,"title":{},"body":{"classes/Camera.html":{},"classes/CameraEvent.html":{},"classes/KeyValue.html":{}}}],["zombie",{"_index":728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zombieapocalypse",{"_index":727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zone.js",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"components/CameraMapComponent.html":{},"modules/CameraMapModule.html":{},"classes/MapOptions.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Camera\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { Camera } from '@common/models/camera.model'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public current: Camera;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"themes.scss\";\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCameraMapModule\n\nCameraMapModule\n\nAppModule -->\n\nCameraMapModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CameraMapModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { BrowserModule       } from '@angular/platform-browser'\nimport { AppComponent        } from '@app/app.component'\nimport { NavbarComponent     } from '@app/navbar/navbar.component'\nimport { CameraMapModule     } from '@cameramap/camera-map.module'\nimport { environment         } from '@env/environment.prod'\n\n@NgModule({\n  declarations: [AppComponent, NavbarComponent],\n  providers: [],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    CameraMapModule.forRoot({\n      apiKey: environment.googleApi,\n      region: 'IL',\n      config: {\n        center: { lat: 32.083333, lng: 34.7999968 },\n        zoom: 13\n      }\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Camera.html":{"url":"classes/Camera.html","title":"class - Camera","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Camera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/camera.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coordinates\n                            \n                            \n                                    Public\n                                    Optional\n                                created\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: CameraType | string, id?: number, coordinates?: Geolocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/camera.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        CameraType | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        coordinates\n                                                  \n                                                        \n                                                                        Geolocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coordinates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Geolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/camera.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CameraType } from '@common/enums/camera-type.enum'\nimport { Geolocation } from '@common/models/geolocation.model'\nimport { ModelBase } from '@common/models/model-base.model'\n\nexport class Camera extends ModelBase {\n  // ======================================= //\n  public coordinates: Geolocation;\n  // ======================================= //\n  constructor(name?: CameraType | string, id?: number, coordinates?: Geolocation) {\n    super(name, id);\n    // ======================================= //\n    this.coordinates = coordinates;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraEvent.html":{"url":"classes/CameraEvent.html","title":"class - CameraEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/camera-event.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camera\n                            \n                            \n                                    Public\n                                cameraId\n                            \n                            \n                                    Public\n                                coordinates\n                            \n                            \n                                    Public\n                                    Optional\n                                created\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, id?: number, event?: EventType | string, coordinates?: Geolocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/camera-event.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                        Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                        EventType | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        coordinates\n                                                  \n                                                        \n                                                                        Geolocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Camera\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/camera-event.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/camera-event.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coordinates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Geolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/camera-event.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:4\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            random\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/models/camera-event.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CameraEvent\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventType } from '@common/enums/event-type.enum'\nimport { Camera } from '@common/models/camera.model'\nimport { Geolocation } from '@common/models/geolocation.model'\nimport { ModelBase } from '@common/models/model-base.model';\n\nexport class CameraEvent extends ModelBase {\n  // ======================================= //\n  public cameraId   : number     ;\n  public camera     : Camera     ;\n  public coordinates: Geolocation;\n  // ======================================= //\n  constructor(camera: Camera, id?: number, event?: EventType | string, coordinates?: Geolocation) {\n    super(event, id);\n    // ======================================= //\n    this.camera      = camera         ;\n    this.cameraId    = camera.id      ;\n    this.coordinates = coordinates    ;\n  }\n  // ======================================= //\n  public random(): CameraEvent {\n    super.name = Object.values(EventType)[Math.floor(Math.random() * (Object.values(EventType).length))];\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CameraEventsComponent.html":{"url":"components/CameraEventsComponent.html","title":"component - CameraEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CameraEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/camera-map/camera-events/camera-events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-camera-events\n            \n\n            \n                styleUrls\n                ./camera-events.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./camera-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camera\n                            \n                            \n                                    Public\n                                cameraEvents$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelection\n                            \n                            \n                                    Public\n                                refreshList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selection\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapService: CameraMapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/camera-map/camera-events/camera-events.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        CameraMapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelection(camera: Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Camera\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n\n\n                \n                    \n                        setselection(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/camera-map/camera-events/camera-events.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Observable               } from 'rxjs'\nimport { Component, Input, OnInit } from '@angular/core'\nimport { CameraEvent              } from '@common/models/camera-event.model'\nimport { Camera                   } from '@common/models/camera.model'\nimport { CameraMapService         } from '@common/services/camera-map.service'\n\n@Component({\n  selector: 'app-camera-events',\n  templateUrl: './camera-events.component.html',\n  styleUrls: ['./camera-events.component.scss']\n})\nexport class CameraEventsComponent implements OnInit {\n  // ======================================= //\n  @Input() public set selection(value: Camera) { this.onSelection(value); }\n  // ======================================= //\n  public camera: Camera;\n  public cameraEvents$: Observable;\n  // ======================================= //\n  constructor(private mapService: CameraMapService) { }\n  ngOnInit() { this.cameraEvents$ = this.mapService.eventsList$; }\n  // ======================================= //\n  public refreshList() {\n    this.mapService.refreshEvents(this.camera);\n  }\n  public onSelection(camera: Camera) {\n    this.camera = camera;\n    this.mapService.getCameraEvents(camera);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Active Events\n    \n     Refresh\n  \n  \n    \n      \n        \n          {{event.name}}\n          \n          {{camera.name}} Activity #{{event.id | number: '2.0'}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./camera-events.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Active Events         Refresh                                {{event.name}}                    {{camera.name}} Activity #{{event.id | number: \\'2.0\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CameraEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CameraFormComponent.html":{"url":"components/CameraFormComponent.html","title":"component - CameraFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CameraFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/camera-map/camera-form/camera-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-camera-form\n            \n\n            \n                styleUrls\n                ./camera-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./camera-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancelForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                saveForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                isvalid\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/camera-map/camera-form/camera-form.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isvalid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-form/camera-form.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core'\n\n@Component({\n  selector: 'app-camera-form',\n  templateUrl: './camera-form.component.html',\n  styleUrls: ['./camera-form.component.scss']\n})\nexport class CameraFormComponent implements OnInit {\n  @ViewChild('modalRef') public modal: ElementRef;\n  // ======================================= //\n  @Output() public onSubmit: EventEmitter = new EventEmitter();\n  @Output() public onCancel: EventEmitter = new EventEmitter();\n  // ======================================= //\n  @Input() public title: string;\n  @Input() public icon: string;\n  @Input() public isvalid: boolean;\n  // ======================================= //\n  constructor() { }\n  ngOnInit() { }\n  // ======================================= //\n  public saveForm() {\n    this.modal.nativeElement.click();\n    this.onSubmit.next();\n  }\n  public cancelForm() {\n    if (confirm('Are you sure?')) {\n      this.modal.nativeElement.click();\n      this.onCancel.next();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n         {{this.title}}\n        \n          &times;\n        \n      \n      \n        \n      \n      \n        \n           Save\n         Cancel\n      \n    \n  \n\n    \n\n    \n                \n                    ./camera-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{this.title}}                  ×                                                           Save         Cancel            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CameraFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CameraFormService.html":{"url":"injectables/CameraFormService.html","title":"injectable - CameraFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CameraFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/camera-form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cameraForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/camera-form.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-form.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cameraForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-form.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable()\nexport class CameraFormService {\n  // ======================================= //\n  private cameraForm: FormGroup;\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public createForm(): FormGroup {\n    this.cameraForm = new FormGroup({\n      id: new FormControl(),\n      name: new FormControl('', Validators.required),\n      coordinates: new FormGroup({\n        lat: new FormControl('', [Validators.required, Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d*)?$')]),\n        lng: new FormControl('', [Validators.required, Validators.pattern('^-?[0-9]\\\\d*(\\\\.\\\\d*)?$')])\n      }),\n      description: new FormControl('')\n    });\n    return this.cameraForm;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CameraListComponent.html":{"url":"components/CameraListComponent.html","title":"component - CameraListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CameraListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/camera-map/camera-list/camera-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-camera-list\n            \n\n            \n                styleUrls\n                ./camera-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./camera-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cameraForm\n                            \n                            \n                                    Public\n                                cameraList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelection\n                            \n                            \n                                    Public\n                                resetCamera\n                            \n                            \n                                    Public\n                                submitCamera\n                            \n                            \n                                    Public\n                                validInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapService: CameraMapService, formService: CameraFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/camera-map/camera-list/camera-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        CameraMapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        CameraFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         Camera\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelection(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCamera()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCamera()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validInput(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-list/camera-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable } from 'rxjs'\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { Camera } from '@common/models/camera.model'\nimport { CameraMapService } from '@common/services/camera-map.service'\nimport { CameraFormService } from '@common/services/camera-form.service';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-camera-list',\n  templateUrl: './camera-list.component.html',\n  styleUrls: ['./camera-list.component.scss']\n})\nexport class CameraListComponent implements OnInit {\n  // ======================================= //\n  @Input() public selection: Camera;\n  @Output() public selectionChange: EventEmitter = new EventEmitter();\n  // ======================================= //\n  public cameraList$: Observable;\n  public cameraForm: FormGroup;\n  // ======================================= //\n  constructor(private mapService: CameraMapService, private formService: CameraFormService) { }\n  ngOnInit() {\n    this.cameraList$ = this.mapService.cameraList$;\n    this.resetCamera();\n  }\n  // ======================================= //\n  public submitCamera() {\n    this.mapService.addCamera(this.cameraForm.value);\n    this.resetCamera();\n  }\n  public resetCamera() {\n    this.cameraForm = this.formService.createForm();\n  }\n  public onSelection(id: number) {\n    this.selection = this.mapService.getCameraById(id);\n    this.selectionChange.emit(this.selection);\n  }\n  public validInput(control: AbstractControl) {\n    return control.touched && control.invalid;\n  }\n}\n\n    \n\n    \n        \n  \n    Available Cameras\n    \n       Add\n\n  \n  \n    \n      \n        \n        #{{i+1 | number: '2.0'}} {{camera.name | titlecase}}\n    \n  \n\n\n\n  \n    \n      \n      \n        Details\n        \n          \n            \n              *Name:\n              \n              \n                 This field is required\n              \n            \n          \n        \n        \n          \n            \n              Description:\n              (optional)\n              \n            \n          \n        \n      \n    \n    \n    \n      \n      \n        Geolocation\n        \n          \n            \n              *Lat:\n              \n              \n                 This field is required\n              \n            \n          \n          \n            \n              *Lng:\n              \n              \n                 This field is required\n              \n            \n          \n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./camera-list.component.scss\n                \n                // ======================================= //\n@import \"themes.scss\";\n@import \"styles.scss\";\n// ======================================= //\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Available Cameras           Add                              #{{i+1 | number: \\'2.0\\'}} {{camera.name | titlecase}}                                Details                                            *Name:                                             This field is required                                                                                        Description:              (optional)                                                                                  Geolocation                                            *Lat:                                             This field is required                                                                        *Lng:                                             This field is required                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CameraListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CameraMapComponent.html":{"url":"components/CameraMapComponent.html","title":"component - CameraMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CameraMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/camera-map/camera-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-camera-map\n            \n\n            \n                styleUrls\n                ./camera-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./camera-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cameraList$\n                            \n                            \n                                    Public\n                                currentCam\n                            \n                            \n                                    Public\n                                eventsList$\n                            \n                            \n                                    Public\n                                googleMaps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onCameraSelection\n                            \n                            \n                                    Private\n                                onSelectionInput\n                            \n                            \n                                    Private\n                                showCameras\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selection\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapService: CameraMapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/camera-map/camera-map.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        CameraMapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-map.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onCameraSelection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCameraSelection(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-map.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onSelectionInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectionInput(camera: Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-map.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showCameras\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showCameras(cameras: Camera[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-map.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cameras\n                                    \n                                                Camera[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentCam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Camera\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventsList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            googleMaps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GoogleMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/camera-map/camera-map.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n\n\n                \n                    \n                        setselection(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/camera-map/camera-map.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Observable } from 'rxjs'\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { CameraEvent } from '@common/models/camera-event.model'\nimport { Camera } from '@common/models/camera.model'\nimport { CameraMapService, GoogleMap, MapLatLng, MapMarker } from '@common/services/camera-map.service'\nimport { Geolocation } from '@common/models/geolocation.model'\n\n@Component({\n  selector: 'app-camera-map',\n  templateUrl: './camera-map.component.html',\n  styleUrls: ['./camera-map.component.scss']\n})\nexport class CameraMapComponent implements OnInit {\n  // ======================================= //\n  @Input() public set selection(value: Camera) { this.onSelectionInput(value); };\n  @Output() public selectionChange: EventEmitter = new EventEmitter();\n  // ======================================= //\n  public cameraList$: Observable;\n  public eventsList$: Observable;\n  // ======================================= //\n  public currentCam: Camera;\n  public googleMaps: GoogleMap;\n  // ======================================= //\n  constructor(private mapService: CameraMapService) { }\n  ngOnInit() {\n    const element: HTMLElement = document.getElementById(\"map\");\n    this.cameraList$ = this.mapService.cameraList$;\n    this.eventsList$ = this.mapService.eventsList$;\n\n    this.mapService\n      .loadMap(element)\n      .then((result) => this.googleMaps = result)\n      .then(() => this.cameraList$.subscribe({ next: (result) => this.showCameras(result) }));\n\n  }\n  // ======================================= //\n  private showCameras(cameras: Camera[]) {\n    for (let index = 0; index  {\n        const element = cameras[index];\n        const iconSize: number = 24;\n        const cameraIcon: string = `https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Circle-icons-camera.svg/${iconSize}px-Circle-icons-camera.svg.png`;\n        const coordinates: Geolocation = element.coordinates;\n        const mapPosition: MapLatLng = new google.maps.LatLng(coordinates.lat, coordinates.lng);\n\n        const marker: MapMarker = new google.maps.Marker(\n          {\n            position: mapPosition,\n            map: this.googleMaps,\n            icon: cameraIcon,\n            title: `${element.id} - ${element.name}`,\n            animation: google.maps.Animation.DROP\n          });\n        marker.addListener('click', () => {\n          marker.setAnimation(google.maps.Animation.BOUNCE);\n        });\n      }, (index + 1) * 100);\n    }\n  }\n  public onCameraSelection(id: number) {\n    this.currentCam = this.mapService.getCameraById(id);\n    this.selectionChange.emit(this.currentCam);\n  }\n  private onSelectionInput(camera: Camera) {\n    /* TODO: Update the map to zoom on the current selection */\n    this.currentCam = camera;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./camera-map.component.scss\n                \n                #map {\n  width: 100%;\n  height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CameraMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CameraMapModule.html":{"url":"modules/CameraMapModule.html","title":"module - CameraMapModule","body":"\n                   \n\n\n\n\n    Modules\n    CameraMapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CameraMapModule\n\n\n\ncluster_CameraMapModule_exports\n\n\n\ncluster_CameraMapModule_providers\n\n\n\ncluster_CameraMapModule_declarations\n\n\n\n\nCameraEventsComponent\n\nCameraEventsComponent\n\n\n\nCameraMapModule\n\nCameraMapModule\n\nCameraMapModule -->\n\nCameraEventsComponent->CameraMapModule\n\n\n\n\n\nCameraFormComponent\n\nCameraFormComponent\n\nCameraMapModule -->\n\nCameraFormComponent->CameraMapModule\n\n\n\n\n\nCameraListComponent\n\nCameraListComponent\n\nCameraMapModule -->\n\nCameraListComponent->CameraMapModule\n\n\n\n\n\nCameraMapComponent\n\nCameraMapComponent\n\nCameraMapModule -->\n\nCameraMapComponent->CameraMapModule\n\n\n\n\n\nCameraEventsComponent \n\nCameraEventsComponent \n\nCameraEventsComponent  -->\n\nCameraMapModule->CameraEventsComponent \n\n\n\n\n\nCameraFormComponent \n\nCameraFormComponent \n\nCameraFormComponent  -->\n\nCameraMapModule->CameraFormComponent \n\n\n\n\n\nCameraListComponent \n\nCameraListComponent \n\nCameraListComponent  -->\n\nCameraMapModule->CameraListComponent \n\n\n\n\n\nCameraMapComponent \n\nCameraMapComponent \n\nCameraMapComponent  -->\n\nCameraMapModule->CameraMapComponent \n\n\n\n\n\nCameraFormService\n\nCameraFormService\n\nCameraMapModule -->\n\nCameraFormService->CameraMapModule\n\n\n\n\n\nCameraMapService\n\nCameraMapService\n\nCameraMapModule -->\n\nCameraMapService->CameraMapModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCameraMapModule -->\n\nLoggerService->CameraMapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/camera-map/camera-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CameraEventsComponent\n                        \n                        \n                            CameraFormComponent\n                        \n                        \n                            CameraListComponent\n                        \n                        \n                            CameraMapComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CameraFormService\n                        \n                        \n                            CameraMapService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CameraEventsComponent\n                        \n                        \n                            CameraFormComponent\n                        \n                        \n                            CameraListComponent\n                        \n                        \n                            CameraMapComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MapOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/camera-map/camera-map.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MapOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                            } from '@angular/common'\nimport { HTTP_INTERCEPTORS    , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders  , NgModule         } from '@angular/core'\nimport { ReactiveFormsModule                     } from '@angular/forms'\nimport { CameraEventsComponent                   } from '@cameramap/camera-events/camera-events.component'\nimport { CameraFormComponent                     } from '@cameramap/camera-form/camera-form.component'\nimport { CameraListComponent                     } from '@cameramap/camera-list/camera-list.component'\nimport { CameraMapComponent                      } from '@cameramap/camera-map.component'\nimport { MapOptions                              } from '@common/helpers/map.config'\nimport { CameraFormService                       } from '@common/services/camera-form.service'\nimport { CameraMapService                        } from '@common/services/camera-map.service'\nimport { LoggerService                           } from '@common/services/logger.service'\nimport { ResourceInterceptor                     } from '@common/services/resource.interceptor'\n\nconst components = [CameraMapComponent, CameraFormComponent, CameraListComponent, CameraEventsComponent]\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule],\n  declarations: components,\n  exports: components,\n  providers: [LoggerService, CameraMapService, CameraFormService],\n})\nexport class CameraMapModule {\n  static forRoot(options: MapOptions): ModuleWithProviders {\n    return {\n      ngModule: CameraMapModule,\n      providers: [\n        { provide: MapOptions, useValue: options },\n        { provide: HTTP_INTERCEPTORS, useClass: ResourceInterceptor, multi: true },\n        LoggerService,\n        CameraMapService,\n        CameraFormService\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CameraMapService.html":{"url":"injectables/CameraMapService.html","title":"injectable - CameraMapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CameraMapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/camera-map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cameraList\n                            \n                            \n                                    Private\n                                _camRefresh\n                            \n                            \n                                    Private\n                                _eventsList\n                            \n                            \n                                    Public\n                                cameraList$\n                            \n                            \n                                    Public\n                                eventsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCamera\n                            \n                            \n                                    Public\n                                getCameraById\n                            \n                            \n                                    Public\n                                getCameraEvents\n                            \n                            \n                                    Private\n                                    Async\n                                getCameras\n                            \n                            \n                                    Public\n                                getEventById\n                            \n                            \n                                    Public\n                                    Async\n                                loadMap\n                            \n                            \n                                    Public\n                                refreshEvents\n                            \n                            \n                                    Private\n                                setEventListener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MapOptions, logger: LoggerService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/camera-map.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCamera(camera: Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCameraById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCameraById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Camera\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCameraEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCameraEvents(camera: Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getCameras\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCameras()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CameraEvent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            loadMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadMap(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshEvents(camera: Camera)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setEventListener\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEventListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/camera-map.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cameraList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Camera[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-map.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _camRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-map.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _eventsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : new KeyValue()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-map.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cameraList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._cameraList?.slice())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-map.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventsList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._eventsList.value?.slice())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/camera-map.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { EventEmitter, Injectable } from '@angular/core'\nimport { LoggerScope } from '@common/enums/logger-scope.enum'\nimport { KeyValue } from '@common/helpers/key-value'\nimport { MapOptions } from '@common/helpers/map.config'\nimport { CameraEvent } from '@common/models/camera-event.model'\nimport { Camera } from '@common/models/camera.model'\nimport { LoggerService } from '@common/services/logger.service'\nimport { environment } from '@env/environment.prod'\nimport { Loader } from '@googlemaps/js-api-loader'\n\n@Injectable()\nexport class CameraMapService {\n  // ======================================= //\n  private _camRefresh: EventEmitter = new EventEmitter();\n  private _cameraList: Camera[] = new Array();\n  private _eventsList: KeyValue> = new KeyValue();\n  // ======================================= //\n  public cameraList$: BehaviorSubject = new BehaviorSubject(this._cameraList?.slice());\n  public eventsList$: Observable = new BehaviorSubject(this._eventsList.value?.slice());\n  // ======================================= //\n  constructor(private options: MapOptions, private logger: LoggerService, private http: HttpClient) {\n    this.getCameras();\n    this.setEventListener();\n  }\n  // ======================================= //\n\n  private async getCameras(): Promise {\n    return await this.http\n      .get('cameras')\n      .pipe(tap(result => this._cameraList = result.map(cam => new Camera(cam.name, cam.id, cam.coordinates))))\n      .pipe(tap(result => this.cameraList$.next(result)))\n      .pipe(tap(result => this.logger.log(LoggerScope.Cameras, result)))\n      .toPromise()\n  }\n  private setEventListener() {\n    this.eventsList$ = new Observable(\n      emitter => {\n        setInterval(() => {\n          if (this._eventsList?.key) {\n            this._eventsList?.value?.push(new CameraEvent(this._eventsList?.key, this._eventsList?.value.length + 1).random());\n            emitter.next(this._eventsList.value.slice());\n          }\n        }, 500);\n        this._camRefresh\n          .subscribe(() => emitter.next(this._eventsList.value.slice()));\n      });\n  }\n  public async loadMap(element: HTMLElement): Promise {\n    await new Loader({ apiKey: atob(environment.googleApi), region: this.options.region })\n      .load();\n    return new google.maps.Map(element, this.options.config) as GoogleMap;\n  }\n  public addCamera(camera: Camera) {\n    this._cameraList.push(camera);\n    this.cameraList$.next(this._cameraList.slice());\n  }\n  public getCameraEvents(camera: Camera) {\n    if (this._eventsList?.key != camera) {\n      this._eventsList = { key: camera, value: new Array() };\n      this._camRefresh.next();\n    }\n  }\n  public refreshEvents(camera: Camera) {\n    this._eventsList = { key: camera, value: new Array() };\n    this._camRefresh.next();\n  }\n  public getEventById(id: number): CameraEvent {\n    return this._eventsList.value\n      .slice()\n      .find(x => x.id == id);\n  }\n  public getCameraById(id: number): Camera {\n    return this._cameraList\n      .slice()\n      .find(x => x.id == id);\n  }\n}\nexport type GoogleMap = google.maps.Map;\nexport type MapLatLng = google.maps.LatLng;\nexport type MapMarker = google.maps.Marker;\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geolocation.html":{"url":"interfaces/Geolocation.html","title":"interface - Geolocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Geolocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/geolocation.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Geolocation {\n  lat: number;\n  lng: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDictionary.html":{"url":"interfaces/IDictionary.html","title":"interface - IDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/logger.service.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [group: string]:    any[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/logger.service.ts:53\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { LoggerScope } from '@common/enums/logger-scope.enum'\n\n@Injectable()\nexport class LoggerService {\n  // ======================================= //\n  private logs: IDictionary = {};\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  public log(group: LoggerScope | string, ...items: any[]) {\n    // ======================================= //\n    this.logs[group] = this.logs[group]\n      ? this.logs[group]\n      : new Array();\n    // ======================================= //\n    items?.length == 1 && Array.isArray(items[0]) ? this.logs[group] = items[0] : items.forEach(item => this.logs[group].unshift(item));\n    this.print();\n  }\n\n  private print() {\n    console.clear();\n    Object.keys(this.logs).forEach((group: string) => {\n      const elements: Array = this.logs[group].sort((a,b) => (b.created as Date)?.valueOf() - (a.created as Date)?.valueOf());\n      console.groupCollapsed(`%c\\t\\t ${group} List ( ${elements.length} Total ) \\t\\t`, `background: #007bff; color: white; font-size:14px; font-weight: bolder`);\n      const maxLngth: number = elements.slice().sort((a, b) => b.name?.length - a.name?.length)[0].name?.length;\n      elements.forEach(item => {\n        const title: string = this.indentation(item.name, maxLngth)\n        console.groupCollapsed(`%c\\t\\ ${group} item #${item.id} - ${title} \\t\\t`, `background: #17a2b8; color: white; font-size:14px; font-weight: bolder`);\n        console.table(item);\n        console.groupEnd()\n      })\n    });\n    console.groupEnd();\n  }\n\n  private indentation(name: string, maxLngth: number) {\n    const difference: number = name.length  0) {\n      for (let index = 1; index \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyValue.html":{"url":"classes/KeyValue.html","title":"class - KeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/key-value.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key?: T_Key, value?: T_Value)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/helpers/key-value.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                    T_Key\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    T_Value\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T_Key\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/key-value.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T_Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/key-value.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class KeyValue {\n  // ======================================= //\n  public key  : T_Key  ;\n  public value: T_Value;\n  // ======================================= //\n  constructor(key?: T_Key, value?: T_Value) {\n    this.key   = key  ;\n    this.value = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                indentation\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                print\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/logger.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            indentation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    indentation(name: string, maxLngth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLngth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(group: LoggerScope | string, ...items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                LoggerScope | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            print\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    print()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/logger.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/services/logger.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { LoggerScope } from '@common/enums/logger-scope.enum'\n\n@Injectable()\nexport class LoggerService {\n  // ======================================= //\n  private logs: IDictionary = {};\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  public log(group: LoggerScope | string, ...items: any[]) {\n    // ======================================= //\n    this.logs[group] = this.logs[group]\n      ? this.logs[group]\n      : new Array();\n    // ======================================= //\n    items?.length == 1 && Array.isArray(items[0]) ? this.logs[group] = items[0] : items.forEach(item => this.logs[group].unshift(item));\n    this.print();\n  }\n\n  private print() {\n    console.clear();\n    Object.keys(this.logs).forEach((group: string) => {\n      const elements: Array = this.logs[group].sort((a,b) => (b.created as Date)?.valueOf() - (a.created as Date)?.valueOf());\n      console.groupCollapsed(`%c\\t\\t ${group} List ( ${elements.length} Total ) \\t\\t`, `background: #007bff; color: white; font-size:14px; font-weight: bolder`);\n      const maxLngth: number = elements.slice().sort((a, b) => b.name?.length - a.name?.length)[0].name?.length;\n      elements.forEach(item => {\n        const title: string = this.indentation(item.name, maxLngth)\n        console.groupCollapsed(`%c\\t\\ ${group} item #${item.id} - ${title} \\t\\t`, `background: #17a2b8; color: white; font-size:14px; font-weight: bolder`);\n        console.table(item);\n        console.groupEnd()\n      })\n    });\n    console.groupEnd();\n  }\n\n  private indentation(name: string, maxLngth: number) {\n    const difference: number = name.length  0) {\n      for (let index = 1; index \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapOptions.html":{"url":"classes/MapOptions.html","title":"class - MapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/helpers/map.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiKey\n                            \n                            \n                                    Public\n                                    Optional\n                                config\n                            \n                            \n                                    Public\n                                    Optional\n                                language\n                            \n                            \n                                    Public\n                                    Optional\n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/map.config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/map.config.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/map.config.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/helpers/map.config.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Geolocation } from '@common/models/geolocation.model';\n\nexport class MapOptions {\n  public apiKey   : string;\n  public language?: string;\n  public region  ?: string;\n  public config?: { center: Geolocation, zoom: number };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/models/model-base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                created\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/models/model-base.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/model-base.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/model-base.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/model-base.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@common/models/model-base.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ModelBase> {\n  // ======================================= //\n  public id: number;\n  public name: string;\n  public created?: Date;\n  public description?: string;\n  // ======================================= //\n  constructor(name: string, id: number) {\n    this.name = name;\n    this.id = id;\n    this.created = new Date();\n  }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n     Camera Map\n  \n  \n    \n       Api Docs\n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @import \"themes.scss\";\n\n.navigation {\n  background: $theme;\n  height: 50px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 30px;\n  color: white;\n\n  .nav-brand {\n    font-size: 20px;\n  }\n  .nav-actions {\n    flex: auto;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .nav-start {\n    }\n    .nav-end {\n    }\n  }\n\n  .nav-action {\n    margin-left: 20px;\n    color: white;\n    display: flex;\n    align-items: center;\n  }\n  .nav-action:hover {\n    background: lighten($color: $theme, $amount: 10%);\n  }\n}\n.btn-text {\n  margin-left: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Camera Map               Api Docs                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CameraEventsComponent', 'selector': 'app-camera-events'},{'name': 'CameraFormComponent', 'selector': 'app-camera-form'},{'name': 'CameraListComponent', 'selector': 'app-camera-list'},{'name': 'CameraMapComponent', 'selector': 'app-camera-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResourceInterceptor.html":{"url":"interceptors/ResourceInterceptor.html","title":"interceptor - ResourceInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResourceInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/@common/services/resource.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/@common/services/resource.interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@common/services/resource.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ResourceInterceptor implements HttpInterceptor {\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const dataset = `assets/rawdata/${req.url.split('/')[0]}.json`;\n    const jsonUrl = req.url.replace(req.url.split('/')[0], dataset);\n    const request = req.clone({ url: jsonUrl, responseType: 'json' });\n\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/@common/helpers/key-value.ts\n            \n            class\n            KeyValue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/@common/helpers/map.config.ts\n            \n            class\n            MapOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/@common/models/camera-event.model.ts\n            \n            class\n            CameraEvent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/@common/models/camera.model.ts\n            \n            class\n            Camera\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/@common/models/geolocation.model.ts\n            \n            interface\n            Geolocation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/@common/models/model-base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/services/camera-form.service.ts\n            \n            injectable\n            CameraFormService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/@common/services/camera-map.service.ts\n            \n            injectable\n            CameraMapService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/@common/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/@common/services/logger.service.ts\n            \n            interface\n            IDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@common/services/resource.interceptor.ts\n            \n            interceptor\n            ResourceInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/camera-map/camera-events/camera-events.component.ts\n            \n            component\n            CameraEventsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/camera-map/camera-form/camera-form.component.ts\n            \n            component\n            CameraFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/camera-map/camera-list/camera-list.component.ts\n            \n            component\n            CameraListComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/camera-map/camera-map.component.ts\n            \n            component\n            CameraMapComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/camera-map/camera-map.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            @googlemaps/js-api-loader : ^1.11.1\n        \n            bootstrap : ^4.5.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.2.1\n        \n            guid-ts : ^1.1.0\n        \n            jquery : ^3.5.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CameraType   (src/.../camera-type.enum.ts)\n                        \n                        \n                            EventType   (src/.../event-type.enum.ts)\n                        \n                        \n                            LoggerScope   (src/.../logger-scope.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/enums/camera-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CameraType\n                    \n                \n                        \n                            \n                                 Neptune\n                            \n                        \n                        \n                            \n                                Value : Neptune\n                            \n                        \n                        \n                            \n                                 Venus\n                            \n                        \n                        \n                            \n                                Value : Venus\n                            \n                        \n                        \n                            \n                                 Saturn\n                            \n                        \n                        \n                            \n                                Value : Saturn\n                            \n                        \n                        \n                            \n                                 Mercury\n                            \n                        \n                        \n                            \n                                Value : Mercury\n                            \n                        \n                        \n                            \n                                 Jupiter\n                            \n                        \n                        \n                            \n                                Value : Jupiter\n                            \n                        \n            \n        \n\n    src/app/@common/enums/event-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                        \n                            \n                                 CivilProtest\n                            \n                        \n                        \n                            \n                                Value : Civil Protest\n                            \n                        \n                        \n                            \n                                 NuclearFallout\n                            \n                        \n                        \n                            \n                                Value : Nuclear Fallout\n                            \n                        \n                        \n                            \n                                 Supernova\n                            \n                        \n                        \n                            \n                                Value : Supernova\n                            \n                        \n                        \n                            \n                                 GrandTheftAuto\n                            \n                        \n                        \n                            \n                                Value : Grand Theft Auto\n                            \n                        \n                        \n                            \n                                 AlienInvasion\n                            \n                        \n                        \n                            \n                                Value : Alien Invasion\n                            \n                        \n                        \n                            \n                                 CarAccident\n                            \n                        \n                        \n                            \n                                Value : Car Accident\n                            \n                        \n                        \n                            \n                                 SuspiciousActivity\n                            \n                        \n                        \n                            \n                                Value : Suspicious Activity\n                            \n                        \n                        \n                            \n                                 ZombieApocalypse\n                            \n                        \n                        \n                            \n                                Value : Zombie Apocalypse\n                            \n                        \n                        \n                            \n                                 Supervolcano\n                            \n                        \n                        \n                            \n                                Value : Supervolcanic Eruption\n                            \n                        \n                        \n                            \n                                 MassExtinction\n                            \n                        \n                        \n                            \n                                Value : Mass Extinction\n                            \n                        \n            \n        \n\n    src/app/@common/enums/logger-scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LoggerScope\n                    \n                \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Cameras\n                            \n                        \n                        \n                            \n                                Value : Cameras\n                            \n                        \n                        \n                            \n                                 CameraSelect\n                            \n                        \n                        \n                            \n                                Value : CameraSelect\n                            \n                        \n                        \n                            \n                                 CameraEvent\n                            \n                        \n                        \n                            \n                                Value : CameraEvent\n                            \n                        \n                        \n                            \n                                 Exceptions\n                            \n                        \n                        \n                            \n                                Value : Exceptions\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCameraMap\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CameraMapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CameraMapModule\n\n\n\ncluster_CameraMapModule_declarations\n\n\n\ncluster_CameraMapModule_exports\n\n\n\ncluster_CameraMapModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCameraMapModule\n\nCameraMapModule\n\nAppModule -->\n\nCameraMapModule->AppModule\n\n\n\n\n\nCameraEventsComponent \n\nCameraEventsComponent \n\nCameraEventsComponent  -->\n\nCameraMapModule->CameraEventsComponent \n\n\n\n\n\nCameraFormComponent \n\nCameraFormComponent \n\nCameraFormComponent  -->\n\nCameraMapModule->CameraFormComponent \n\n\n\n\n\nCameraListComponent \n\nCameraListComponent \n\nCameraListComponent  -->\n\nCameraMapModule->CameraListComponent \n\n\n\n\n\nCameraMapComponent \n\nCameraMapComponent \n\nCameraMapComponent  -->\n\nCameraMapModule->CameraMapComponent \n\n\n\n\n\nCameraEventsComponent\n\nCameraEventsComponent\n\nCameraMapModule -->\n\nCameraEventsComponent->CameraMapModule\n\n\n\n\n\nCameraFormComponent\n\nCameraFormComponent\n\nCameraMapModule -->\n\nCameraFormComponent->CameraMapModule\n\n\n\n\n\nCameraListComponent\n\nCameraListComponent\n\nCameraMapModule -->\n\nCameraListComponent->CameraMapModule\n\n\n\n\n\nCameraMapComponent\n\nCameraMapComponent\n\nCameraMapModule -->\n\nCameraMapComponent->CameraMapModule\n\n\n\n\n\nCameraFormService\n\nCameraFormService\n\nCameraMapModule -->\n\nCameraFormService->CameraMapModule\n\n\n\n\n\nCameraMapService\n\nCameraMapService\n\nCameraMapModule -->\n\nCameraMapService->CameraMapModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nCameraMapModule -->\n\nLoggerService->CameraMapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GoogleMap   (src/.../camera-map.service.ts)\n                        \n                        \n                            MapLatLng   (src/.../camera-map.service.ts)\n                        \n                        \n                            MapMarker   (src/.../camera-map.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/@common/services/camera-map.service.ts\n    \n    \n        \n            \n                \n                    \n                    GoogleMap\n                \n            \n            \n                \n                        google.maps.Map\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MapLatLng\n                \n            \n            \n                \n                        google.maps.LatLng\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MapMarker\n                \n            \n            \n                \n                        google.maps.Marker\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../camera-map.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/camera-map/camera-map.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CameraMapComponent, CameraFormComponent, CameraListComponent, CameraEventsComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleApi: \"QUl6YVN5QlNCOGNrOTZqY0daSmhTRm9iTVJOcUhDeGUwTHlvZjRn\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
